//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Abstract, Version ( "2.38.0" ), 
    ClassConstraint { "inv: SoID <> null implies SoOrgID <> null" }, 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingData is used to represent configuration and and "
       "operational parameters for CIM_ManagedElement instances. There "
       "are a number of different uses of CIM_SettingData supported in "
       "the model today. Additional uses may be defined in the future.\n"
       "Instances of CIM_SettingData may represent Aspects of a "
       "CIM_ManagedElement instance. This is modeled using the "
       "CIM_SettingsDefineState association. CIM_SettingData may be "
       "used to define capabilities when associated to an instance of "
       "CIM_Capabilities through the CIM_SettingsDefineCapabilities "
       "association. \n"
       "Instances of CIM_SettingData may represent different types of "
       "configurations for a CIM_ManagedElement, including persistent "
       "configurations, in progress configuration changes, or "
       "requested configurations. The CIM_ElementSettingData "
       "association is used to model the relationship between a "
       "CIM_SettingData instance and the CIM_ManagedElement for which "
       "it is a configuration. \n"
       "When an instance of CIM_SettingData represents a "
       "configuration, the current operational values for the "
       "parameters of the element are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values that are present "
       "in the SettingData object. For example, a modem might have a "
       "SettingData baud rate of 56Kb/sec but be operating at "
       "19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. SettingData "
       "instances can be aggregated together into higher- level "
       "SettingData objects using ConcreteComponent associations." )]
class CIM_SettingData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of SettingData. "
          "In addition, the user-friendly name can be used as an "
          "index property for a search or query. (Note: The name "
          "does not have to be unique within a namespace.)" )]
   string ElementName;

      [Description ( 
          "An instance of CIM_SettingData may correspond to a "
          "well-known configuration that exists for an associated "
          "CIM_ManagedElement. If the ConfigurationName property is "
          "non-NULL, the instance of CIM_SettingData shall "
          "correspond to a well-known configuration for a Managed "
          "Element, the value of the ConfigurationName property "
          "shall be the name of the configuration, and the "
          "ChangeableType property shall have the value 0 or 2. A "
          "value of NULL for the ConfigurationName property shall "
          "mean that the instance of CIM_SettingData does not "
          "correspond to a well-known configuration for a Managed "
          "Element or that this information is unknown." )]
   string ConfigurationName;

      [Description ( 
          "Enumeration indicating the type of setting. 0 \"Not "
          "Changeable - Persistent\" indicates the instance of "
          "SettingData represents primordial settings and shall not "
          "be modifiable. 1 \"Changeable - Transient\" indicates "
          "the SettingData represents modifiable settings that are "
          "not persisted. Establishing persistent settings from "
          "transient settings may be supported. 2 \"Changeable - "
          "Persistent\" indicates the SettingData represents a "
          "persistent configuration that may be modified. 3 \"Not "
          "Changeable - Transient\" indicates the SettingData "
          "represents a snapshot of the settings of the associated "
          "ManagedElement and is not persistent." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Not Changeable - Persistent", 
          "Changeable - Transient", "Changeable - Persistent", 
          "Not Changeable - Transient" }]
   uint16 ChangeableType;

      [Experimental, Description ( 
          "The value of each CIM_ComponentSetting instance includes "
          "a CIM_SettingData instance that specifies further values "
          "for this CIM_SettingData instance. The values are "
          "interpreted according to the values of the Policy, "
          "ValueRole, and ValueRange properties included in each "
          "CIM_ComponentSetting instance.\n"
          "\n"
          "Note: If SoID is not null, then the embedded "
          "ComponentSetting elements may be interpreted as ITIL "
          "Service Level Targets.\n"
          "Note: For CIM v3, the type of ComponentSetting will be "
          "CIM_ComponentSetting. This is not represented as an "
          "EmbeddedInstance in CIM v2 to avoid a circular "
          "dependency that CIM v2 compilers cannot handle." ), 
       EmbeddedObject]
   string ComponentSetting[];

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "The value SoID must be unique in the context of an "
          "Organization unique identifier specified in SoOrgID." ), 
       ModelCorrespondence { "CIM_SettingData.SoOrgID" }]
   string SoID;

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "When not Null, the value of SoOrgID shall be a unique "
          "identifier for the organization that specifies the value "
          "of SoID." ), 
       ModelCorrespondence { "CIM_SettingData.SoID" }]
   string SoOrgID;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01621.000" type ="add">
// Add/Update ModelCorrespondence to reflect updates
// in iSCSISessionSettings (properties MaxConnectionsPerSession,
// DefaultTimeToWait,
// and DefaultTimeToRetain).</change>
// <change cr="NetworksCR00062.000" type ="change">
// Move class from Experimental to Final in v2.11.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_iSCSISessionSettings
// ==================================================================
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "The default negotiation settings for an iSCSI Session. These "
       "properties are used as the starting position for login "
       "negotiations between initiator and target nodes. The "
       "properties describing the resulting outcome of the login "
       "negotiation are in the iSCSISession class. Depending on a "
       "given implementation an instance of iSCSISessionSettings will "
       "be associated by ElementSettingData to one or more instances "
       "of iSCSIProtocolEndpoint, SCSIProtocolController, or "
       "ComputerSystem." )]
class CIM_iSCSISessionSettings : CIM_SettingData {

      [Write, Description ( 
          "The maximum number of connections allowed in each "
          "session to and/or from this node." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeMaxConnections" }, 
       ModelCorrespondence { 
          "CIM_iSCSISession.MaxConnectionsPerSession" }]
   uint32 MaxConnectionsPerSession = 1;

      [Write, Description ( 
          "This property indicates the InitialR2T preference for "
          "this node: true = YES, false = will try to negotiate NO, "
          "will accept YES." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeInitialR2T" }, 
       ModelCorrespondence { "CIM_iSCSISession.InitialR2T" }]
   boolean InitialR2TPreference = true;

      [Write, Description ( 
          "This property indicates ImmediateData preference for "
          "this node True = YES (but will accept NO), False = NO." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeImmediateData" }, 
       ModelCorrespondence { "CIM_iSCSISession.ImmediateData" }]
   boolean ImmediateDataPreference = true;

      [Write, Description ( 
          "Maximum number of outstanding R2Ts allowed per ISCSI task."
           ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeMaxOutstandingR2T" }, 
       ModelCorrespondence { "CIM_iSCSISession.MaxOutstandingR2T" }]
   uint32 MaxOutstandingR2T = 1;

      [Write, Description ( 
          "The maximum length (bytes) supported for unsolicited "
          "data to/from this node." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeFirstBurstLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSISession.MaxUnsolicitedFirstDataBurstLength" }, 
       PUnit ( "byte" )]
   uint32 MaxUnsolicitedFirstDataBurstLength = 65536;

      [Write, Description ( 
          "The maximum number of bytes which can be sent within a "
          "single sequence of Data-In or Data-Out PDUs." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeMaxBurstLength" }, 
       ModelCorrespondence { "CIM_iSCSISession.MaxDataBurstLength" }, 
       PUnit ( "byte" )]
   uint32 MaxDataBurstLength = 262144;

      [Write, Description ( 
          "The DataSequenceInOrder preference of this node. False "
          "(=No) indicates that iSCSI data PDU sequences MAY be "
          "transferred in any order. True (=Yes) indicates that "
          "data PDU sequences MUST be transferred using "
          "continuously increasing offsets, except during error "
          "recovery." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDataSequenceInOrder" }, 
       ModelCorrespondence { "CIM_iSCSISession.DataSequenceInOrder" }]
   boolean DataSequenceInOrderPreference = true;

      [Write, Description ( 
          "The DataPDUInOrder preference of this node. False (=No) "
          "indicates that iSCSI data PDUs within sequences MAY be "
          "in any order. True (=Yes) indicates that data PDUs "
          "within sequences MUST be at continuously increasing "
          "addresses, with no gaps or overlay between PDUs." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeDataPDUInOrder" }, 
       ModelCorrespondence { "CIM_iSCSISession.DataPDUInOrder" }]
   boolean DataPDUInOrderPreference = true;

      [Write, Description ( 
          "The DefaultTime2Wait preference of this node. This is "
          "the minimum time, in seconds, to wait before attempting "
          "an explicit/implicit logout or active iSCSI task "
          "reassignment after an unexpected connection termination "
          "or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Wait" }, 
       ModelCorrespondence { "CIM_iSCSISession.DefaultTimeToWait" }, 
       PUnit ( "second" )]
   uint32 DefaultTimeToWaitPreference = 2;

      [Write, Description ( 
          "The DefaultTime2Retain preference of this node. This is "
          "the maximum time, in seconds after an initial wait "
          "(Time2Wait), before which an active iSCSI task "
          "reassignment is still possible after an unexpected "
          "connection termination or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Retain" }, 
       ModelCorrespondence { "CIM_iSCSISession.DefaultTimeToRetain" }, 
       PUnit ( "second" )]
   uint32 DefaultTimeToRetainPreference = 20;

      [Write, Description ( 
          "The ErrorRecoveryLevel preference of this node. "
          "Currently, only 0-2 are valid. This is designed to "
          "accommodate future error recover levels. \n"
          "Higher error recovery levels imply support in addition "
          "to support for the lower error level functions. In other "
          "words, error level 2 implies support for levels 0-1, "
          "since those functions are subsets of error level 2." ), 
       MinValue ( 0 ), 
       MaxValue ( 255 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeErrorRecoveryLevel" }, 
       ModelCorrespondence { "CIM_iSCSISession.ErrorRecoveryLevel" }]
   uint32 ErrorRecoveryLevelPreference = 0;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_iSCSISessionSettings : CIM_iSCSISessionSettings
{


};

