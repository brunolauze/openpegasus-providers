//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Abstract, Version ( "2.38.0" ), 
    ClassConstraint { "inv: SoID <> null implies SoOrgID <> null" }, 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingData is used to represent configuration and and "
       "operational parameters for CIM_ManagedElement instances. There "
       "are a number of different uses of CIM_SettingData supported in "
       "the model today. Additional uses may be defined in the future.\n"
       "Instances of CIM_SettingData may represent Aspects of a "
       "CIM_ManagedElement instance. This is modeled using the "
       "CIM_SettingsDefineState association. CIM_SettingData may be "
       "used to define capabilities when associated to an instance of "
       "CIM_Capabilities through the CIM_SettingsDefineCapabilities "
       "association. \n"
       "Instances of CIM_SettingData may represent different types of "
       "configurations for a CIM_ManagedElement, including persistent "
       "configurations, in progress configuration changes, or "
       "requested configurations. The CIM_ElementSettingData "
       "association is used to model the relationship between a "
       "CIM_SettingData instance and the CIM_ManagedElement for which "
       "it is a configuration. \n"
       "When an instance of CIM_SettingData represents a "
       "configuration, the current operational values for the "
       "parameters of the element are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values that are present "
       "in the SettingData object. For example, a modem might have a "
       "SettingData baud rate of 56Kb/sec but be operating at "
       "19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. SettingData "
       "instances can be aggregated together into higher- level "
       "SettingData objects using ConcreteComponent associations." )]
class CIM_SettingData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of SettingData. "
          "In addition, the user-friendly name can be used as an "
          "index property for a search or query. (Note: The name "
          "does not have to be unique within a namespace.)" )]
   string ElementName;

      [Description ( 
          "An instance of CIM_SettingData may correspond to a "
          "well-known configuration that exists for an associated "
          "CIM_ManagedElement. If the ConfigurationName property is "
          "non-NULL, the instance of CIM_SettingData shall "
          "correspond to a well-known configuration for a Managed "
          "Element, the value of the ConfigurationName property "
          "shall be the name of the configuration, and the "
          "ChangeableType property shall have the value 0 or 2. A "
          "value of NULL for the ConfigurationName property shall "
          "mean that the instance of CIM_SettingData does not "
          "correspond to a well-known configuration for a Managed "
          "Element or that this information is unknown." )]
   string ConfigurationName;

      [Description ( 
          "Enumeration indicating the type of setting. 0 \"Not "
          "Changeable - Persistent\" indicates the instance of "
          "SettingData represents primordial settings and shall not "
          "be modifiable. 1 \"Changeable - Transient\" indicates "
          "the SettingData represents modifiable settings that are "
          "not persisted. Establishing persistent settings from "
          "transient settings may be supported. 2 \"Changeable - "
          "Persistent\" indicates the SettingData represents a "
          "persistent configuration that may be modified. 3 \"Not "
          "Changeable - Transient\" indicates the SettingData "
          "represents a snapshot of the settings of the associated "
          "ManagedElement and is not persistent." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Not Changeable - Persistent", 
          "Changeable - Transient", "Changeable - Persistent", 
          "Not Changeable - Transient" }]
   uint16 ChangeableType;

      [Experimental, Description ( 
          "The value of each CIM_ComponentSetting instance includes "
          "a CIM_SettingData instance that specifies further values "
          "for this CIM_SettingData instance. The values are "
          "interpreted according to the values of the Policy, "
          "ValueRole, and ValueRange properties included in each "
          "CIM_ComponentSetting instance.\n"
          "\n"
          "Note: If SoID is not null, then the embedded "
          "ComponentSetting elements may be interpreted as ITIL "
          "Service Level Targets.\n"
          "Note: For CIM v3, the type of ComponentSetting will be "
          "CIM_ComponentSetting. This is not represented as an "
          "EmbeddedInstance in CIM v2 to avoid a circular "
          "dependency that CIM v2 compilers cannot handle." ), 
       EmbeddedObject]
   string ComponentSetting[];

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "The value SoID must be unique in the context of an "
          "Organization unique identifier specified in SoOrgID." ), 
       ModelCorrespondence { "CIM_SettingData.SoOrgID" }]
   string SoID;

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "When not Null, the value of SoOrgID shall be a unique "
          "identifier for the organization that specifies the value "
          "of SoID." ), 
       ModelCorrespondence { "CIM_SettingData.SoID" }]
   string SoOrgID;


};



// Copyright (c) 2012 DMTF.  All rights reserved.
   [Version ( "2.35.0" ), 
    UMLPackagePath ( "CIM::Network::IP" ), 
    Description ( 
       "This class and its sub-classes represents Internet Protocol "
       "(IP) related settings. When used as an accumulation of "
       "settings (AddressOrigin set to 11 \"cumulative "
       "configuration\"), this SettingData instance is the aggregation "
       "point identifying an IP configuration. Multiple IP "
       "configurations could exist for a target. Each configuration is "
       "represented with an instance of IPAssignmentSettingData. The "
       "details of the IP configuration are defined by instances of "
       "sub-classes of this class (i.e. StaticIPAssignmentSettingData, "
       "DHCPSettingData, DNSSettingData). These instances are "
       "associated with the IPAssignmentSettingData instance using the "
       "OrderedComponent or ConcreteComponent associations. For "
       "example, a static IP configuration would be represented by an "
       "instance of IPAssignmentSettingData and an instance of "
       "StaticIPAssignmentSettingData associated via an instance of "
       "ConcreteComponent. A static IP configuration including DNS "
       "would be modeled using an instance of IPAssignmentSettingData, "
       "DNSSettingData, and StaticIPAssignmentSettingData. The "
       "DNSSettingData and StaticIPAssignmentSettingData instance "
       "would be associated with the IPAssignmentSettingData using "
       "instances of ConcreteComponent." )]
class CIM_IPAssignmentSettingData : CIM_SettingData {

      [Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask for IPv4 or Prefix Length for IPv6, "
          "and Gateway shall be assigned to the IPProtocolEndpoint. \n"
          "A value of 3 \"Static\" shall indicate the values will "
          "be assigned manually. \n"
          "A value of 4 \"DHCP\" shall indicate the values will be "
          "assigned utilizing the Dynamic Host Configuration "
          "Protocol. See RFC 2131 and related. \n"
          "A value of 5 \"BOOTP\" shall indicate the values will be "
          "assigned utilizing BOOTP. See RFC 951 and related. \n"
          "A value of 6 \"IPv4 Link Local\" shall indicate the "
          "values will be assigned using the IPv4 Link Local "
          "protocol. See RFC 3927.\n"
          "A value of 7 \"DHCPv6\" shall indicate the values will "
          "be assigned using DHCPv6. See RFC 3315. \n"
          "A value of 8 \"IPv6 AutoConfig \" shall indicate the "
          "values will be assigned using the IPv6 AutoConfig. See "
          "RFC 4862. \n"
          "A value of 9 \"Stateless\" shall indicate Stateless will "
          "be assigned. \n"
          "A value of 10 \"Link Local\" shall indicate Link Local "
          "values will be assigned.\n"
          "A value of 11 \"cumulative configuration\" shall "
          "indicate an accumulation of settings is used. This "
          "instance of CIM_IPAssignmentSettingData should be "
          "associated with other instances of "
          "CIM_IPAssignmentSettingData or its subclasses to "
          "represent the detailed IP settings." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "..", "32768.." }, 
       Values { "Unknown", "Other", "Not Applicable", "Static", 
          "DHCP", "BOOTP", "IPv4 Link Local", "DHCPv6", 
          "IPv6AutoConfig", "Stateless", "Link Local", 
          "cumulative configuration", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 AddressOrigin = 0;

      [Description ( "An enumeration that describes the IP version." ), 
       ValueMap { "0", "..", "4096", "4097", "32768.." }, 
       Values { "Unknown", "DMTF Reserved", "IPv4", "IPv6", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_ProtocolEndpoint.ProtocolIFType" }]
   uint16 ProtocolIFType;

      [Experimental, Description ( 
          "An enumeration of subnet prefix origin for the IP "
          "Address assigned by this setting instance. Refer "
          "IpAddressPrefixOriginTC from RFC 4293.\n"
          "A value of 1 \"other\" indicate none of the other values "
          "is applicable.\n"
          "A value of 2 \"manual\" indicate that the prefix is "
          "manually assigned.\n"
          "A value of 3 \"wellknown\" indicate that prefix is a "
          "well known prefix.\n"
          "A value of 4 \"dhcp\" indicate that prefix is from dhcp.\n"
          "A value of 5 \"routeradv\" indicate that prefix is from "
          "router advertisement." ), 
       ValueMap { "1", "2", "3", "4", "5", "..", "32768.." }, 
       Values { "other", "manual", "wellknown", "dhcp", "routeradv", 
          "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "MIB.IETF|IP-MIB.IpAddressPrefixOriginTC" }]
   uint16 AddressPrefixOrigin;

      [Experimental, Description ( 
          "An enumeration of suffix origin for the IP Address "
          "assigned by this setting instance. Refer "
          "IpAddressOriginTC from RFC 4293.\n"
          "A value of 1 \"other\" indicate none of the other values "
          "is applicable.\n"
          "A value of 2 \"manual\" indicate that the suffix is "
          "manually assigned.\n"
          "A value of 3 \"wellknown\" indicate that suffix is a "
          "well known suffix.\n"
          "A value of 4 \"dhcp\" indicate that suffix is from dhcp.\n"
          "A value of 5 \"linklayer\" indicate that suffix is from "
          "IPv6 stateless auto-configuration.\n"
          "A value of 6 \"random\" indicate that suffix is chosen "
          "randomly." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "..", "32768.." }, 
       Values { "other", "manual", "wellknown", "dhcp", "linklayer", 
          "random", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "MIB.IETF|IP-MIB.IpAddressOriginTC" }]
   uint16 AddressSuffixOrigin;

      [Experimental, Description ( 
          "Description of the AddressPrefixOrigin when the "
          "AddressPrefixOrigin property has a value of \"other\"." )]
   string OtherAddressPrefixOriginDescription;

      [Experimental, Description ( 
          "Description of the AddressSuffixOrigin when the "
          "AddressSuffixOrigin property has a value of \"other\"." )]
   string OtherAddressSuffixOriginDescription;


};



// Copyright (c) 2012 DMTF.  All rights reserved.
   [Version ( "2.32.0" ), 
    UMLPackagePath ( "CIM::Network::DHCP" ), 
    Description ( 
       "This class represents the desired configuration settings for "
       "the DHCPProtocolEndpoint (i.e. DHCP client configuration." )]
class CIM_DHCPSettingData : CIM_IPAssignmentSettingData {

      [Override ( "AddressOrigin" ), 
       Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint. \n"
          "A value of 4 indicates that the values will be assigned "
          "via DHCP. See RFC 2131 and related. \n"
          "A value of 7 \"DHCPv6\" shall indicate the values will "
          "be assigned using DHCPv6. See RFC 3315." ), 
       ValueMap { "4", "7", "..", "32768.." }, 
       Values { "DHCP", "DHCPv6", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.AddressOrigin" }]
   uint16 AddressOrigin = 4;

      [Description ( 
          "A previously allocated IPv4 address for which the client "
          "is requesting re-allocation. This property is used in a "
          "client request (DHCPREQUEST) as the value of the ciaddr "
          "field. For AddressOrigin other than 4, this property "
          "shall be NULL." ), 
       MappingStrings { "RFC1541.IETF|Section 3.2" }, 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.IPv4Address" }]
   string RequestedIPv4Address;

      [Description ( 
          "This property is used in a client request (DHCPREQUEST) "
          "to allow the client to request a lease time for the IP "
          "address. The value shall be specified as an interval at "
          "a granularity of seconds. This value corresponds to the "
          "value for code 51 as defined in RFC2132." ), 
       Units ( "Seconds" ), 
       MappingStrings { "RFC2132.IETF|Section 9.2" }, 
       ModelCorrespondence { "CIM_DHCPProtocolEndpoint.LeaseTime" }, 
       PUnit ( "second" )]
   uint32 RequestedLeaseTime;

      [Write, Description ( 
          "This property is used by DHCP clients to specify their "
          "unique identifier. DHCP servers use this value to index "
          "their database of address bindings. This value is "
          "expected to be unique for all clients in an "
          "administrative domain. This corresponds to DHCP Option "
          "Code 61 as defined in RFC2132. \n"
          "While this value is an option and therefore could be "
          "expressed using the RequestedOption property, it differs "
          "from other properties in that it includes a value when "
          "specified from the client." ), 
       MappingStrings { "RFC2132.IETF|Section 9.14" }]
   string ClientIdentifier;

      [Write, Description ( 
          "This property is used by DHCP clients to optionally "
          "identify the vendor type and configuration of a DHCP "
          "client. This corresponds to DHCP Option Code 60 as "
          "defined in RFC2132. While this is value is an option and "
          "therefore could be expressed using the RequestedOption "
          "property, it differs from other properties in that it "
          "includes a value when specified from the client." ), 
       MappingStrings { "RFC2132.IETF|Section 9.13" }]
   string VendorClassIdentifier;

      [Write, Description ( 
          "The list of requested DHCP options which the client is "
          "capable of interpreting but not necessarily required for "
          "the client to operate properly. This list of DHCP "
          "options is for IPv4." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived" }]
   uint16 RequestedOptions[];

      [Write, Description ( 
          "The list of DHCP options required for the client to "
          "operate properly. This list of DHCP options is for IPv4." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived" }]
   uint16 RequiredOptions[];

      [Experimental, Write, Description ( 
          "The list of requested DHCP options which the client is "
          "capable of interpreting but not necessarily required for "
          "the client to operate properly. This list of DHCP "
          "options is for IPv6. The values of this property shall "
          "be the opcodes specified in RFC3315, Section 22." ), 
       MappingStrings { "RFC3315.IETF" }]
   uint16 IPv6RequestedOptions[];

      [Experimental, Write, Description ( 
          "The list of DHCP required for the client to operate "
          "properly. This list of options is for IPv6. The values "
          "of this property shall be the option-codes specified in "
          "RFC3315, Section 22." ), 
       MappingStrings { "RFC3315.IETF" }]
   uint16 IPv6RequiredOptions[];

      [Experimental, Write, Description ( 
          "The IPv6Address that this DHCPSettingData is requesting." )]
   string RequestedIPv6Address;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_DHCPSettingData : CIM_DHCPSettingData
{


};

