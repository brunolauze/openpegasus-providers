//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Abstract, Version ( "2.39.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";

      [Description ( "The end time for the rate data interval." )]
   datetime RateIntervalEndTime;

      [Experimental, Description ( 
          "The start time for the rate data interval. Rate "
          "indicates the number of data points per second - for "
          "example, number of read I/Os per second." )]
   datetime RateIntervalStartTime;


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Experimental, Abstract, Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "This class extends StatisticalData to abstract the concept of "
       "ImagingStatisticalData associated with an imaging system "
       "(e.g., ComputerSystem), imaging service (e.g., PrintService), "
       "imaging device (e.g., Printer), imaging job (e.g., PrintJob), "
       "or any other imaging element. \n"
       "This abstract class defines common properties for: \n"
       "(a) persistence (PersistenceType and OtherPersistenceType); \n"
       "(b) correlation of ImagingStatisticalData information between "
       "CIM and SNMP interfaces (SNMPKeyId). \n"
       "Note: An instance of any concrete class derived from this "
       "abstract class shall be associated with exactly one instance "
       "of a scoping imaging element (e.g., Printer) via an instance "
       "of the ElementStatisticalData association class. \n"
       "See: Model and diagram in section 4 of PWG Imaging System "
       "State and Counter MIB (PWG 5106.3-2008, or successor)." )]
class CIM_ImagingStatisticalData : CIM_StatisticalData {

      [Description ( 
          "Persistence of this instance of ImagingStatisticalData. \n"
          "1 (Other) means vendor-specific persistence and should "
          "not be used (to avoid interoperability problems). \n"
          "2 (Unknown) means unknown persistence and should not be "
          "be used (to avoid amgiguity in accounting applications). \n"
          "3 (Lifetime) means since install of the scoping imaging "
          "element (e.g., PrintService). \n"
          "4 (PowerOn) means since last power on of the scoping "
          "imaging element (e.g., Printer). \n"
          "5 (Reset) means since the last reset of this instance of "
          "ImagingStatisticalData." ), 
       ValueMap { "1", "2", "3", "4", "5", ".." }, 
       Values { "Other", "Unknown", "Lifetime", "PowerOn", "Reset", 
          "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorPersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTimePersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMediaUsedPersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTrafficPersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImagePersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionPersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedPersistence", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetPersistence" }, 
       ModelCorrespondence { 
          "CIM_ImagingStatisticalData.OtherPersistenceType", 
          "CIM_StatisticalData.ResetSelectedStats", 
          "CIM_FileSystemSetting.PersistenceTypes" }]
   uint16 PersistenceType;

      [Description ( 
          "A free-form string that describes the persistence when "
          "the the value of the PersistenceType property is equal "
          "to 1 (Other)." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { 
          "CIM_ImagingStatisticalData.PersistenceType", 
          "CIM_FileSystemSetting.OtherPersistenceTypes" }]
   string OtherPersistenceType;

      [Description ( 
          "A unique value used by the scoping imaging element "
          "(e.g., PrintService) to identify this "
          "ImagingStatisticalData. Note: This property is necessary "
          "to correlate counter and event information between CIM "
          "and SNMP interfaces." ), 
       MinValue ( 1 ), 
       MaxValue ( 2147483647 ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTimeKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMediaUsedKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTrafficKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImageKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedKeyIndex", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetKeyIndex" }]
   uint32 SNMPKeyId;


};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Experimental, Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "This class defines work counters (for accounting and billing) "
       "ImagingStatisticalData associated with an imaging system "
       "(e.g., ComputerSystem), imaging service (e.g., PrintService), "
       "imaging device (e.g., Printer), imaging job (e.g., PrintJob), "
       "or any other imaging element. \n"
       "See: Section 4 Overview in PWG Counter MIB v2 (PWG 5106.3)." )]
class CIM_ImagingWorkStatisticalData : CIM_ImagingStatisticalData {

      [Description ( 
          "Work type of this instance of "
          "ImagingWorkStatisticalData. \n"
          "1 (Other) means vendor-specific work type and should not "
          "be used (to avoid interoperability problems). \n"
          "2 (Unknown) means unknown work type and should not be be "
          "used (to avoid amgiguity in accounting applications). \n"
          "3 (WorkTotals) means total counters across imaging "
          "element execution modes (both user and maintenance). \n"
          "4 (Datastream) means user datastream work (both control "
          "and content) while this imaging element is in user mode. \n"
          "5 (Auxiliary) means hardcopy auxiliary work (e.g., "
          "banner sheets) while this imaging element is in user "
          "mode. \n"
          "6 (Waste) means hardcopy waste work (e.g., process "
          "runout or paper jams) while this imaging element is in "
          "user mode. \n"
          "7 (Maintenance) means maintenance work (e.g., "
          "calibration) while this imaging element is in "
          "maintenance mode." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", ".." }, 
       Values { "Other", "Unknown", "WorkTotals", "Datastream", 
          "Auxiliary", "Waste", "Maintenance", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImageWorkType", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionWorkType", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedWorkType", 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetWorkType" }]
   uint16 WorkType;

      [Description ( 
          "A free-form string that describes the work type when the "
          "the value of the WorkType property is equal to 1 "
          "(Other)." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { 
          "CIM_ImagingWorkStatisticalData.WorkType" }]
   string OtherWorkType;

      [Description ( 
          "Total images processed by this managed element (e.g., Scanner)."
           ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImageTotalImages" }]
   uint32 TotalImages;

      [Description ( 
          "Monochrome images processed by this managed element "
          "(e.g., Scanner)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImageMonochromeImages" }]
   uint32 MonochromeImages;

      [Description ( 
          "Full color images processed by this managed element "
          "(e.g., Scanner)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImageFullColorImages" }]
   uint32 FullColorImages;

      [Description ( 
          "Total hardcopy impressions from this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionTotalImps" }]
   uint32 TotalImpressions;

      [Description ( 
          "Monochrome hardcopy impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionMonochromeImps" }]
   uint32 MonochromeImpressions;

      [Description ( 
          "Blank hardcopy impressions from this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionBlankImps" }]
   uint32 BlankImpressions;

      [Description ( 
          "Full color hardcopy impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionFullColorImps" }]
   uint32 FullColorImpressions;

      [Description ( 
          "Highlight color hardcopy impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icImpressionHighlightColorImps" }]
   uint32 HighlightColorImpressions;

      [Description ( 
          "Total two-sided impressions from this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedTotalImps" }]
   uint32 TotalTwoSidedImpressions;

      [Description ( 
          "Monochrome two-sided impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedMonochromeImps" }]
   uint32 MonochromeTwoSidedImpressions;

      [Description ( 
          "Blank two-sided impressions from this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedBlankImps" }]
   uint32 BlankTwoSidedImpressions;

      [Description ( 
          "Full color two-sided impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedFullColorImps" }]
   uint32 FullColorTwoSidedImpressions;

      [Description ( 
          "Highlight color two-sided impressions from this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icTwoSidedHighlightColorImps" }]
   uint32 HighlightColorTwoSidedImpressions;

      [Description ( 
          "Total media sheets consumed by this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetTotalSheets" }]
   uint32 TotalSheets;

      [Description ( 
          "Monochrome media sheets consumed by this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetMonochromeSheets" }]
   uint32 MonochromeSheets;

      [Description ( 
          "Blank media sheets consumed by this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetBlankSheets" }]
   uint32 BlankSheets;

      [Description ( 
          "Full color media sheets consumed by this managed element "
          "(e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetFullColorSheets" }]
   uint32 FullColorSheets;

      [Description ( 
          "Highlight color media sheets consumed by this managed "
          "element (e.g., Printer or PrintMarker)." ), 
       MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icSheetHighlightColorSheets" }]
   uint32 HighlightColorSheets;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_ImagingWorkStatisticalData : CIM_ImagingWorkStatisticalData
{


};

