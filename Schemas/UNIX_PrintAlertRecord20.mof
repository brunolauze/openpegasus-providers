//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2010 DMTF.  All rights reserved.
   [Abstract, Version ( "2.25.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "The RecordForLog class is used to instantiate records to be "
       "aggregated to a Log." )]
class CIM_RecordForLog : CIM_ManagedElement {

      [Description ( 
          "A string describing the data structure of the "
          "information in the property, RecordData. If the "
          "RecordFormat string is <empty>, RecordData should be "
          "interpreted as a free-form string. \n"
          "\n"
          "To describe the data structure of RecordData, the "
          "RecordFormat string should be constructed as follows: \n"
          "- The first character is a delimiter character and is "
          "used to parse the remainder of the string into "
          "sub-strings. \n"
          "- Each sub-string is separated by the delimiter "
          "character and should be in the form of a CIM property "
          "declaration (i.e., datatype and property name). This set "
          "of declarations may be used to interpret the similarly "
          "delimited RecordData property. \n"
          "For example, using a \'*\' delimiter, RecordFormat = "
          "\"*string ThisDay*uint32 ThisYear*datetime SomeTime\" \n"
          "may be used to interpret: RecordData = \"*This is "
          "Friday*2002*20020807141000.000000-300\"." ), 
       ModelCorrespondence { "CIM_RecordForLog.RecordData" }]
   string RecordFormat;

      [Description ( 
          "A string containing LogRecord data. \n"
          "If the corresponding RecordFormat property is <empty>, "
          "or cannot be parsed according to the recommended format, "
          "RecordData should be interpreted as a free-form string. "
          "If the RecordFormat property contains parseable format "
          "information (as recommended in the RecordFormat "
          "Description qualifier), the RecordData string SHOULD be "
          "parsed in accordance with this format. In this case, "
          "RecordData SHOULD begin with the delimiter character and "
          "this character SHOULD be used to separate substrings in "
          "the manner described. The RecordData string can then be "
          "parsed by the data consumer and appropriately typed." ), 
       ModelCorrespondence { "CIM_RecordForLog.RecordFormat" }]
   string RecordData;

      [Deprecated { "No value" }, 
       Description ( 
          "This property is being deprecated to avoid conflicts "
          "with localization implementations using CIM/XML over "
          "HTTP protocol, the preferred mechanism. \n"
          "A locale indicates a particular geographical, political, "
          "or cultural region. The Locale specifies the language "
          "used in creating the RecordForLog data. If the Locale "
          "property is empty, it is assumed that the default locale "
          "is en_US (English). \n"
          "The locale string consists of three sub-strings, "
          "separated by underscores: \n"
          "- The first sub-string is the language code, as "
          "specified in ISO639. \n"
          "- The second sub-string is the country code, as "
          "specified in ISO3166. \n"
          "- The third sub-string is a variant, which is vendor "
          "specific. \n"
          "For example, US English appears as: \"en_US_WIN\", where "
          "the \"WIN\" variant would specify a Windows "
          "browser-specific collation (if one exists). Since the "
          "variant is not standardized, it is not commonly used and "
          "generally is limited to easily recognizable values "
          "(\"WIN\", \"UNIX\", \"EURO\", etc.) used in standard "
          "environments. The language and country codes are "
          "required; the variant may be empty." )]
   string Locale;

      [Description ( 
          "An enumerated value that describes the severity of the "
          "Indication from the notifier\'s point of view: \n"
          "1 - Other, by CIM convention, is used to indicate that "
          "the Severity\'s value can be found in the OtherSeverity "
          "property. \n"
          "3 - Degraded/Warning should be used when its appropriate "
          "to let the user decide if action is needed. \n"
          "4 - Minor should be used to indicate action is needed, "
          "but the situation is not serious at this time. \n"
          "5 - Major should be used to indicate action is needed "
          "NOW. \n"
          "6 - Critical should be used to indicate action is needed "
          "NOW and the scope is broad (perhaps an imminent outage "
          "to a critical resource will result). \n"
          "7 - Fatal/NonRecoverable should be used to indicate an "
          "error occurred, but it\'s too late to take remedial "
          "action. \n"
          "2 and 0 - Information and Unknown (respectively) follow "
          "common usage. Literally, the Indication is purely "
          "informational or its severity is simply unknown." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Information", 
          "Degraded/Warning", "Minor", "Major", "Critical", 
          "Fatal/NonRecoverable" }, 
       MappingStrings { "Recommendation.ITU|X733.Perceived severity" }]
   uint16 PerceivedSeverity;


};



// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "The LogEntry object can describe the definitional format for "
       "entries in a Log, or can be used to instantiate the actual "
       "entries in the Log." )]
class CIM_LogEntry : CIM_RecordForLog {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( "The containing Log\'s InstanceID." ), 
       MaxLen ( 256 )]
   string LogInstanceID;

      [Description ( 
          "The containing Log\'s Name. This property is available "
          "for backwards continuity with CIM_LogRecord." ), 
       MaxLen ( 256 )]
   string LogName;

      [Description ( 
          "RecordID may be used to provide a representation of log "
          "entry ordering or pointers/handles for log entries." ), 
       MaxLen ( 256 )]
   string RecordID;

      [Description ( 
          "A LogEntry may include a timestamp for the entry." )]
   datetime CreationTimeStamp;

      [Description ( 
          "A string that uniquely identifies the entity that owns "
          "the definition of the format of the Message described in "
          "this instance. OwningEntity MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity or standards body defining the "
          "format." )]
   string OwningEntity;

      [Description ( 
          "A string that uniquely identifies, within the scope of "
          "the OwningEntity, the format of the Message." ), 
       ModelCorrespondence { "CIM_LogEntry.Message", 
          "CIM_LogEntry.MessageArguments" }]
   string MessageID;

      [Description ( 
          "The formatted message. This message is constructed by "
          "combining some or all of the dynamic elements specified "
          "in the MessageArguments property with the static "
          "elements uniquely identified by the MessageID in a "
          "message registry or other catalog associated with the "
          "OwningEntity." ), 
       ModelCorrespondence { "CIM_LogEntry.MessageID", 
          "CIM_LogEntry.MessageArguments" }]
   string Message;

      [Description ( 
          "An array containing the dynamic content of the message.\r\n"
          "Each DYNAMIC_ELEMENT for the message referred to by the "
          "MessageID property shall be contained in "
          "MessageArguments whether the DYNAMIC_ELEMENT is included "
          "in the Message or not.\r\n"
          "In addition, the entries in MessageArguments need to be "
          "in the same order as the DYNAMIC_ELEMENTs." ), 
       ModelCorrespondence { "CIM_LogEntry.Message", 
          "CIM_LogEntry.MessageID" }]
   string MessageArguments[];


};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Experimental, Version ( "2.21" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This class represents an alert (warning or critical event) on "
       "a Printer (print device). A critical alert is one that stops "
       "the Printer from printing immediately and printing cannot "
       "continue until the critical alert condition is eliminated. "
       "Non-critical alerts are those alerts that do not stop printing "
       "immediately, but may do so at some future time. A "
       "PrintAlertRecord is a snapshot of the state of the device at "
       "the time an alert condition occurs. It is preserved in a "
       "format that is suitable for offline processing, when the "
       "device may have changed or may not be available for "
       "interrogation. A PrintAlertRecord shall be associated with "
       "exactly one Printer via an instance of the PrintAlertLog "
       "class. See: Model in section 2 of Printer MIB (RFC 3805) and "
       "section 3 of Finisher MIB (RFC 3806)." ), 
    MappingStrings { "MIB.IETF|Printer-MIB.prtAlertEntry" }]
class CIM_PrintAlertRecord : CIM_LogEntry {

      [Override ( "CreationTimeStamp" ), 
       Description ( 
          "The time that this PrintAlertRecord was generated." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertTime", 
          "MIB.IETF|SNMPv2-MIB.sysUpTime", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemUptime", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate" }, 
       ModelCorrespondence { "CIM_OperatingSystem.LocalDateTime" }]
   datetime CreationTimeStamp;

      [Override ( "RecordData" ), 
       Description ( 
          "Note: For SNMP Proxy implementations, this property "
          "shall contain every integer object in the corresponding "
          "prtAlertEntry row in the Printer MIB v2 (RFC 3805). \n"
          "The string object prtAlertDescription in the "
          "corresponding prtAlertEntry row shall not be encoded in "
          "this RecordData property, but shall instead be "
          "transcoded (if necessary) into Unicode and stored in the "
          "LocalizedDescription property below." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertEntry" }]
   string RecordData;

      [Description ( 
          "A free-form text description of this alert in the "
          "localization specified by "
          "CIM_Printer.CurrentNaturalLanguage." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertDescription", 
          "MIB.IETF|Printer-MIB.PrtLocalizedDescriptionStringTC" }]
   string LocalizedDescription;

      [Description ( 
          "The code name that describes the type of alert. The code "
          "name shall be the IANA-registered label for this alert, "
          "taken from the PrtAlertCodeTC textual convention in the "
          "IANA Printer MIB (originally published in RFC 3805), "
          "e.g., \'coverOpen\' or \'inputMediaSupplyLow\'. A binary "
          "change alert describes the state of the component, while "
          "a unary change alert describes a single event. The same "
          "code name can be used for a binary change alert or a "
          "unary change alert, depending on implementation. Also, "
          "the same code name can be used to indicate a critical or "
          "non-critical (warning) alert, depending on "
          "implementation. The value of the SeverityLevel property "
          "specifies binary versus unary and critical versus "
          "non-critical for each alert for this particular Printer "
          "implementation." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertCode", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtAlertCodeTC" }, 
       ModelCorrespondence { "CIM_PrintAlertRecord.OtherCodeName", 
          "CIM_PrintAlertRecord.SeverityLevel" }]
   string CodeName;

      [Description ( 
          "A free-form string that describes the type of alert when "
          "the value of the CodeName property is equal to \'other\'." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { "CIM_PrintAlertRecord.CodeName" }]
   string OtherCodeName;

      [Description ( 
          "The level of severity of this alert in this Printer "
          "implementation as follows: 1 (Other) means a "
          "non-standard severity level is present in "
          "OtherSeverityLevel property. 2 (Unknown) means severity "
          "level is unknown for this alert. 3 (Critical) means that "
          "this alert on this component has stopped printing on "
          "this Printer. 4 (Warning) means that this alert has not "
          "stopped printing on this Printer. 5 "
          "(WarningBinaryChangeEvent) means that a previous "
          "critical alert condition has been cleared." ), 
       ValueMap { "1", "2", "3", "4", "5", ".." }, 
       Values { "Other", "Unknown", "Critical", "Warning", 
          "WarningBinaryChangeEvent", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtAlertSeverityLevel", 
          "MIB.IETF|Printer-MIB.PrtAlertSeverityLevelTC" }, 
       ModelCorrespondence { "CIM_PrintAlertRecord.CodeName" }]
   uint32 SeverityLevel;

      [Description ( 
          "A free-form string that describes the severity level "
          "when the value of the SeverityLevel property is equal to "
          "1 (Other)." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       ModelCorrespondence { "CIM_PrintAlertRecord.SeverityLevel" }]
   string OtherSeverityLevel;

      [Description ( 
          "The lowest inheritance class name with a schema name of "
          "\'CIM\' (e.g., \'CIM_PrintMarker\') of the particular "
          "component of a Printer with which this alert is "
          "associated. When used with the value of "
          "ComponentElementName, this property allows all instances "
          "of this component to be uniquely identified. If the "
          "component class name is unknown or not applicable, then "
          "this property shall be null. Note: This property is "
          "necessary (rather than the use of an association class), "
          "because this log entry is static and records a past "
          "event for offline processing. See: Section 2 of the "
          "Printer MIB v2 (RFC 3805) and section 3 of Finisher MIB "
          "(RFC 3806). Note: This property is necessary to "
          "correlate status and event (alert) information between "
          "CIM and SNMP interfaces." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertGroup", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtAlertGroupTC" }, 
       ModelCorrespondence { 
          "CIM_PrintAlertRecord.ComponentElementName" }]
   string ComponentClassName;

      [Description ( 
          "The value of the ManagedSystemElement.Name property of "
          "the particular component of a Printer with which this "
          "alert is associated. When used with the value of "
          "ComponentClassName, this property allows all instances "
          "of this component to be uniquely identified. If the "
          "component element name is unknown or not applicable, "
          "then this property shall be null. Note: This property is "
          "necessary (rather than the use of an association class), "
          "because this log entry is static and records a past "
          "event for offline processing. See: Section 2 of the "
          "Printer MIB v2 (RFC 3805) and section 3 of Finisher MIB "
          "(RFC 3806). Note: This property is necessary to "
          "correlate status and event (alert) information between "
          "CIM and SNMP interfaces." ), 
       MinLen ( 0 ), 
       MaxLen ( 255 ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtAlertGroupIndex" }, 
       ModelCorrespondence { "CIM_ManagedSystemElement.Name", 
          "CIM_PrintAlertRecord.ComponentClassName" }]
   string ComponentElementName;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_PrintAlertRecord : CIM_PrintAlertRecord
{


};

