//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1). This cardinality "
       "mandates the instantiation of the ElementCapabilities "
       "association for the referenced instance of Capabilities. "
       "ElementCapabilities describes the existence requirements for "
       "the referenced instance of ManagedElement. Specifically, the "
       "ManagedElement MUST exist and provide the context for the "
       "Capabilities. Note that Capabilities do not indicate what IS "
       "configured or operational, but what CAN or CANNOT exist, be "
       "defined or be used. Note that it is possible to describe both "
       "supported and excluded abilities and functions (both "
       "capabilities and limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


      [Experimental, Description ( 
          "Method to create a set of supported SettingData "
          "elements, from two sets of SettingData elements, "
          "provided by the caller. \n"
          "CreateGoal should be used when the SettingData instances "
          "that represents the goal will not persist beyond the "
          "execution of the client and where those instances are "
          "not intended to be shared with other, non-cooperating "
          "clients. \n"
          "Both TemplateGoalSettings and SupportedGoalSettings are "
          "represented as strings containing EmbeddedInstances of a "
          "CIM_SettingData subclass. These embedded instances do "
          "not exist in the infrastructure supporting this method "
          "but are maintained by the caller/client. \n"
          "This method should return CIM_Error(s) representing that "
          "a single named property of a setting (or other) "
          "parameter (either reference or embedded object) has an "
          "invalid value or that an invalid combination of named "
          "properties of a setting (or other) parameter (either "
          "reference or embedded object) has been requested. \n"
          "If the input TemplateGoalSettings is NULL or the empty "
          "string, this method returns a default SettingData "
          "element that is supported by this Capabilities element. \n"
          "If the TemplateGoalSettings specifies values that cannot "
          "be supported, this method shall return an appropriate "
          "CIM_Error and should return a best match for a "
          "SupportedGoalSettings. \n"
          "The client proposes a goal using the "
          "TemplateGoalSettings parameter and gets back Success if "
          "the TemplateGoalSettings is exactly supportable. It gets "
          "back \"Alternative Proposed\" if the output "
          "SupportedGoalSettings represents a supported "
          "alternative. This alternative should be a best match, as "
          "defined by the implementation. \n"
          "If the implementation is conformant to a "
          "RegisteredProfile, then that profile may specify the "
          "algorithms used to determine best match. A client may "
          "compare the returned value of each property against the "
          "requested value to determine if it is left unchanged, "
          "degraded or upgraded. \n"
          "\n"
          "Otherwise, if the TemplateGoalSettings is not applicable "
          "an \"Invalid Parameter\" error is returned. \n"
          "\n"
          "When a mutually acceptable SupportedGoalSettings has "
          "been achieved, the client may use the contained "
          "SettingData instances as input to methods for creating a "
          "new object ormodifying an existing object. Also the "
          "embedded SettingData instances returned in the "
          "SupportedGoalSettings may be instantiated via "
          "CreateInstance, either by a client or as a side-effect "
          "of the execution of an extrinsic method for which the "
          "returned SupportedGoalSettings is passed as an embedded "
          "instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Alternative Proposed", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 CreateGoalSettings(
         [IN, Description ( 
             "If provided, TemplateGoalSettings are elements of "
             "class CIM_SettingData, or a derived class, that is "
             "used as the template to be matched. . \n"
             "At most, one instance of each SettingData subclass "
             "may be supplied. \n"
             "All SettingData instances provided by this "
             "property are interpreted as a set, relative to "
             "this Capabilities instance. \n"
             "SettingData instances that are not relevant to "
             "this instance are ignored. \n"
             "If not provided, it shall be set to NULL. In that "
             "case, a SettingData instance representing the "
             "default settings of the associated ManagedElement "
             "is used." ), 
          EmbeddedInstance ( "CIM_SettingData" )]
      string TemplateGoalSettings[], 
         [IN, OUT, Description ( 
             "SupportedGoalSettings are elements of class "
             "CIM_SettingData, or a derived class. \n"
             "At most, one instance of each SettingData subclass "
             "may be supplied. \n"
             "All SettingData instances provided by this "
             "property are interpreted as a set, relative to "
             "this Capabilities instance. \n"
             "\n"
             "To enable a client to provide additional "
             "information towards achieving the "
             "TemplateGoalSettings, an input set of SettingData "
             "instances may be provided. If not provided, this "
             "property shall be set to NULL on input.. Note that "
             "when provided, what property values are changed, "
             "and how, is implementation dependent and may be "
             "the subject of other standards. \n"
             "If provided, the input SettingData instances must "
             "be ones that the implementation is able to support "
             "relative to the ManagedElement associated via "
             "ElementCapabilities. Typically, the input "
             "SettingData instances are created by a previous "
             "instantiation of CreateGoalSettings. \n"
             "If the input SupportedGoalSettings is not "
             "supported by the implementation, then an \"Invalid "
             "Parameter\" (5) error is returned by this call. In "
             "this case, a corresponding CIM_ERROR should also "
             "be returned. \n"
             "On output, this property is used to return the "
             "best supported match to the TemplateGoalSettings. \n"
             "If the output SupportedGoalSettings matches the "
             "input SupportedGoalSettings, then the "
             "implementation is unable to improve further "
             "towards meeting the TemplateGoalSettings." ), 
          EmbeddedInstance ( "CIM_SettingData" )]
      string SupportedGoalSettings[]);

};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Version ( "2.39.0" ), 
    UMLPackagePath ( "CIM::System::FilesystemServices" ), 
    Description ( 
       "FileSystemCapabilities specifies the combination of properties "
       "that a FileSystemService can support when creating or "
       "maintaining FileSystems. Each supported combination of "
       "properties is specified by a FileSystemSetting that is "
       "associated with the FileSystemCapabilities element via "
       "ElementSettingData. \n"
       "A FileSystemCapabilities element specifies the properties "
       "supported when using it. \n"
       "This class provides a CreateGoal method that can be used to "
       "create a FileSystemSetting element that can be used as a goal "
       "for creating or modifying a filesystem. This class also "
       "supports persistence and recoverability of a FileSystem and "
       "its contained elements as defined in CIM 2.8 for the use of "
       "DatabaseStorageArea." )]
class CIM_FileSystemCapabilities : CIM_Capabilities {

      [Deprecated { "CIM_FileSystemSetting.PersistenceTypes" }, 
       Description ( 
          "An array of enumerated values representing the "
          "persistence capabilities of the FileSystem. A value of "
          "\"Persistent\" indicates that the FileSystem supports "
          "persistence, can be preserved through an orderly "
          "shutdown and could be protected. A value of \"Temporary\" "
          "indicates that the FileSystem supports non-persistence, "
          "may not be protected and may not survive a shutdown. A "
          "value of \"External\" indicates that the FileSystem "
          "could controlled outside of the operating environment "
          "and may need to be protected by specialized means. A "
          "value of \"Other\" is provided to allow for additional "
          "persistence types, to be described in the "
          "OtherPersistenceType attribute, and is expected to be "
          "rarely, if ever, used." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Persistent", "Temporary", "External" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemCapabilities.SupportedPersistenceTypes", 
          "CIM_FileSystem.PersistenceType" }]
   uint16 SupportedPersistenceTypes[];

      [Deprecated { "CIM_FileSystemSetting.OtherPersistenceTypes" }, 
       Description ( 
          "An array of strings describing the persistence "
          "capabilities where the corresponding entry in "
          "SupportedPersistenceTypes has a value of \"Other\". This "
          "value is ignored in all other cases." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemCapabilities.SupportedPersistenceTypes", 
          "CIM_FileSystem.OtherPersistenceType" }]
   string SupportedOtherPersistenceTypes[];

      [Experimental, Description ( 
          "An enumerated value that indicates the file system "
          "implementation type supported by this Capabilities." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000.." }, 
       Values { "Unknown", "UFS", "HFS", "FAT", "FAT16", "FAT32", 
          "NTFS4", "NTFS5", "XFS", "AFS", "EXT2", "EXT3", 
          "REISERFS", "DMTF Reserved", "Vendor Defined" }, 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ActualFileSystemType" }]
   uint16 ActualFileSystemType = 0;

      [Experimental, Description ( 
          "An array of property names of the Setting that this "
          "Capabilities element supports. The Object-related "
          "parameters are not specified because they must always be "
          "supported even if not used." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "0x8000.." }, 
       Values { "DataExtentsSharing", "CopyTarget", 
          "FilenameCaseAttributes", "FilenameStreamFormats", 
          "FilenameFormats", "LockingSemantics", 
          "AuthorizationProtocols", "AuthenticationProtocols", 
          "Persistence", "DMTF Reserved", "Vendor Defined" }, 
       Read]
   uint16 SupportedProperties[];

      [Experimental, Description ( 
          "An array of enumerated values representing the "
          "operations to files and directories on the file system. "
          "Set of supported operations depends on the file system "
          "type. The operation information is used as the action "
          "type in the access control management." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "..", "0x8000.." }, 
       Values { "Read", "Write", "Execute", "Create", "Rename", 
          "Delete", "Change Attribute", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 SupportedOperations[];


      [Experimental, Description ( 
          "Start a job to create a supported FileSystemSetting from "
          "a FileSystemSetting provided by the caller. If the "
          "operation completes successfully and did not require a "
          "long-running ConcreteJob, it will return 0. If "
          "4096/0x1000 is returned, a ConcreteJob will be started "
          "to create the element. A Reference to the ConcreteJob "
          "will be returned in the output parameter Job. \n"
          "This method MAY return a CIM_Error representing that a "
          "single named property of a setting (or other) parameter "
          "(either reference or embedded object) has an invalid "
          "value or that an invalid combination of named properties "
          "of a setting (or other) parameter (either reference or "
          "embedded object) has been requested. \n"
          "If the input TemplateGoal is NULL or the empty string, "
          "this method returns a default FileSystemSetting that is "
          "supported by this FileSystemCapabilities. \n"
          "The output is returned as the SupportedGoal parameter. "
          "Both TemplateGoal and SupportedGoal are embedded objects "
          "and do not exist in the provider but are maintained by "
          "the client. \n"
          "If the TemplateGoal specifies values that cannot be "
          "supported this method MUST return an appropriate error "
          "and should return a best match for a SupportedGoal." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "TemplateGoal is not well-formed", 
          "TemplateGoal cannot be satisfied exactly", 
          "StorageSetting cannot be used with ActualFileSystemType", 
          "StorageSetting cannot be used with CopyTarget", 
          "StorageSetting cannot be used with ObjectType", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint16 CreateGoal(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "TemplateGoal is an element of class "
             "CIM_FileSystemSetting, or a derived class, encoded "
             "as a string-valued embedded object parameter, that "
             "is used as the template to be matched ." ), 
          EmbeddedInstance ( "CIM_FileSystemSetting" )]
      string TemplateGoal, 
         [IN ( false ), OUT, Description ( 
             "SupportedGoal is an element of class "
             "CIM_FileSystemSetting, or a derived class, encoded "
             "as a string-valued embedded object parameter, that "
             "is used to return the best supported match to the "
             "TemplateGoal." ), 
          EmbeddedInstance ( "CIM_FileSystemSetting" )]
      string SupportedGoal);

      [Experimental, Description ( 
          "This method returns the \"expected\" size of "
          "StorageExtent that would support a file system specified "
          "by the input FileSystemGoal parameter assuming that the "
          "other settings for the StorageExtent are specified by "
          "the ExtentSetting parameter. \n"
          "If the input FileSystemGoal or the ExtentSetting are "
          "NULL, this method returns a value computed by using the "
          "default FileSystemSetting or some vendor-specific canned "
          "StorageSetting. \n"
          "A value of 0 is returned if this method is not able to "
          "determine a reasonable size or does not restrict sizes "
          "based on setting information." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 GetRequiredStorageSize(
         [IN, Description ( 
             "FileSystemGoal is an element of class "
             "CIM_FileSystemSetting, or a derived class, encoded "
             "as a string-valued embedded object parameter, that "
             "is used to specify the settings for the FileSystem "
             "to be created." ), 
          EmbeddedInstance ( "CIM_FileSystemSetting" )]
      string FileSystemGoal, 
         [IN, Description ( 
             "ExtentSetting is an element of class "
             "CIM_StorageSetting, or a derived class, encoded as "
             "a string-valued embedded object parameter, that is "
             "used to specify the settings of the StorageExtent "
             "to be used for this FileSystem." ), 
          EmbeddedInstance ( "CIM_StorageSetting" )]
      string ExtentSetting, 
         [OUT, Description ( 
             "A number that indicates the size of the storage "
             "extent that this FileSystem is expected to need. A "
             "value of 0 indicates that there is no expected "
             "size." ), 
          Units ( "Bytes" ), 
          PUnit ( "byte" )]
      uint64 ExpectedSize, 
         [OUT, Description ( 
             "A number that indicates the size of the smallest "
             "storage extent that would support the specified "
             "FileSystem. A value of 0 indicates that there is "
             "no minimum size." ), 
          Units ( "Bytes" ), 
          PUnit ( "byte" )]
      uint64 MinimumSizeAcceptable, 
         [OUT, Description ( 
             "A number that indicates the size of the largest "
             "storage extent that would be usable for the "
             "specified FileSystem. A value of 0 indicates that "
             "there is no maximum size." ), 
          Units ( "Bytes" ), 
          PUnit ( "byte" )]
      uint64 MaximumSizeUsable);

      [Experimental, Description ( 
          "This returns the restrictions on the ElementName in the "
          "related \"OUT\" parameters." ), 
       ValueMap { "0", "4", "..", "0x8000.." }, 
       Values { "Success", "Failed", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 GetElementNameCapabilities(
         [Out, Description ( 
             "Enumeration indicating what methods can accept the "
             "element name for creation or modification of a "
             "storage element. \n"
             "CreateFileSystem is an example of an InvokeMethod. "
             "ModifyInstance and SetProperty are examples of "
             "intrinsic methods.\n"
             "An empty array indicates ElementNaming for "
             "ElementType is not supported, in which case the "
             "other OUT parameters are null." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "ElementName can be supplied during creation", 
             "ElementName can be modified with InvokeMethod", 
             "ElementName can be modified with intrinsic method", 
             "DMTF Reserved", "Vendor Specific" }]
      uint32 SupportedFeatures[], 
         [Out, Description ( 
             "This string expresses the restrictions on "
             "ElementName. The mask is expressed as a regular "
             "expression. See DMTF standard ABNF with the "
             "Management Profile Specification Usage Guide, "
             "appendix C for the regular expression syntax "
             "permitted. \n"
             "Since the ElementNameMask can describe the maximum "
             "length of the ElementName,any length defined in "
             "the regexp is in addition to the restriction "
             "defined in MaxElementNameLen (causing the smaller "
             "value to be the maximum length). The ElementName "
             "value satisfies the restriction, if and only if it "
             "matches the regular expression. \n"
             "If NULL, it indicates no restrictions on the "
             "ElementName." ), 
          ModelCorrespondence { 
             "CIM_EnabledLogicalElementCapabilities.ElementNameMask" }]
      string ElementNameMask, 
         [Out, Description ( 
             "Maximum supported ElementName length in characters." ), 
          MaxValue ( 256 ), 
          MappingStrings { 
             "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MaxNameChars" }, 
          ModelCorrespondence { 
             "CIM_EnabledLogicalElementCapabilities.MaxElementNameLen" }]
      uint16 MaxElementNameLen);

};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_FileSystemCapabilities : CIM_FileSystemCapabilities
{


};

