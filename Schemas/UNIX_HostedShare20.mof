//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "HostedDependency defines a ManagedElement in the context of "
       "another ManagedElement in which it resides." )]
class CIM_HostedDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The scoping ManagedElement." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The hosted ManagedElement." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Experimental, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "CIM_HostedShare is an association between a Share and the "
       "System on which the functionality resides. The cardinality of "
       "this association is many-to-many but a FileShare must have at "
       "least 1 host system, either exporting or importing it. (A "
       "System may host many Shares and a Share may be hosted by more "
       "than one System, but a Share must have at least one "
       "HostedShare). \n"
       "Heuristic: For export, a Share is hosted on the System where "
       "the LogicalElement that is exported by the Share is located "
       "(via SharedElement, derived from LogicalIdentity). For import, "
       "a Share is hosted on the System where the LogicalFile (or "
       "other namespace element) that provides the mount-point for the "
       "share is located (via ImportedShare, derived from "
       "LogicalIdentity)." )]
class CIM_HostedShare : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Share hosted on the System." )]
   CIM_Share REF Dependent;

      [Description ( 
          "A string that uniquely identifies the remote element "
          "(expected to be an ExportedFileShare) that the Dependent "
          "Share represents if this is an imported Share. This is "
          "an opaque, unique identifier that provides an "
          "unambiguous name for the remote share -- we expect that "
          "it will be a WWN but any other interoperable format "
          "(e.g., a URI) would also work." )]
   string RemoteShareWWN;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_HostedShare : CIM_HostedShare
{


};

