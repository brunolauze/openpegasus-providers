//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Abstract, Version ( "2.38.0" ), 
    ClassConstraint { "inv: SoID <> null implies SoOrgID <> null" }, 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingData is used to represent configuration and and "
       "operational parameters for CIM_ManagedElement instances. There "
       "are a number of different uses of CIM_SettingData supported in "
       "the model today. Additional uses may be defined in the future.\n"
       "Instances of CIM_SettingData may represent Aspects of a "
       "CIM_ManagedElement instance. This is modeled using the "
       "CIM_SettingsDefineState association. CIM_SettingData may be "
       "used to define capabilities when associated to an instance of "
       "CIM_Capabilities through the CIM_SettingsDefineCapabilities "
       "association. \n"
       "Instances of CIM_SettingData may represent different types of "
       "configurations for a CIM_ManagedElement, including persistent "
       "configurations, in progress configuration changes, or "
       "requested configurations. The CIM_ElementSettingData "
       "association is used to model the relationship between a "
       "CIM_SettingData instance and the CIM_ManagedElement for which "
       "it is a configuration. \n"
       "When an instance of CIM_SettingData represents a "
       "configuration, the current operational values for the "
       "parameters of the element are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values that are present "
       "in the SettingData object. For example, a modem might have a "
       "SettingData baud rate of 56Kb/sec but be operating at "
       "19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. SettingData "
       "instances can be aggregated together into higher- level "
       "SettingData objects using ConcreteComponent associations." )]
class CIM_SettingData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of SettingData. "
          "In addition, the user-friendly name can be used as an "
          "index property for a search or query. (Note: The name "
          "does not have to be unique within a namespace.)" )]
   string ElementName;

      [Description ( 
          "An instance of CIM_SettingData may correspond to a "
          "well-known configuration that exists for an associated "
          "CIM_ManagedElement. If the ConfigurationName property is "
          "non-NULL, the instance of CIM_SettingData shall "
          "correspond to a well-known configuration for a Managed "
          "Element, the value of the ConfigurationName property "
          "shall be the name of the configuration, and the "
          "ChangeableType property shall have the value 0 or 2. A "
          "value of NULL for the ConfigurationName property shall "
          "mean that the instance of CIM_SettingData does not "
          "correspond to a well-known configuration for a Managed "
          "Element or that this information is unknown." )]
   string ConfigurationName;

      [Description ( 
          "Enumeration indicating the type of setting. 0 \"Not "
          "Changeable - Persistent\" indicates the instance of "
          "SettingData represents primordial settings and shall not "
          "be modifiable. 1 \"Changeable - Transient\" indicates "
          "the SettingData represents modifiable settings that are "
          "not persisted. Establishing persistent settings from "
          "transient settings may be supported. 2 \"Changeable - "
          "Persistent\" indicates the SettingData represents a "
          "persistent configuration that may be modified. 3 \"Not "
          "Changeable - Transient\" indicates the SettingData "
          "represents a snapshot of the settings of the associated "
          "ManagedElement and is not persistent." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Not Changeable - Persistent", 
          "Changeable - Transient", "Changeable - Persistent", 
          "Not Changeable - Transient" }]
   uint16 ChangeableType;

      [Experimental, Description ( 
          "The value of each CIM_ComponentSetting instance includes "
          "a CIM_SettingData instance that specifies further values "
          "for this CIM_SettingData instance. The values are "
          "interpreted according to the values of the Policy, "
          "ValueRole, and ValueRange properties included in each "
          "CIM_ComponentSetting instance.\n"
          "\n"
          "Note: If SoID is not null, then the embedded "
          "ComponentSetting elements may be interpreted as ITIL "
          "Service Level Targets.\n"
          "Note: For CIM v3, the type of ComponentSetting will be "
          "CIM_ComponentSetting. This is not represented as an "
          "EmbeddedInstance in CIM v2 to avoid a circular "
          "dependency that CIM v2 compilers cannot handle." ), 
       EmbeddedObject]
   string ComponentSetting[];

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "The value SoID must be unique in the context of an "
          "Organization unique identifier specified in SoOrgID." ), 
       ModelCorrespondence { "CIM_SettingData.SoOrgID" }]
   string SoID;

      [Experimental, Description ( 
          "If not Null, the CIM_SettingData instance is being used "
          "to represent an ITIL element: either a service option, a "
          "service level requirement, or a service level target. "
          "When not Null, the value of SoOrgID shall be a unique "
          "identifier for the organization that specifies the value "
          "of SoID." ), 
       ModelCorrespondence { "CIM_SettingData.SoID" }]
   string SoOrgID;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Experimental, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::System::FilesystemServices" ), 
    Description ( 
       "The FileSystemSetting describes the attribute values set when "
       "creating a FileSystem by a FileSystemConfigurationService. "
       "These settings can be associated via the ElementSettingData "
       "association with the created FileSystem. If the setting is "
       "associated via SettingAssociatedToCapabilities to a "
       "FileSystemCapabilities, it is one of the canned settings "
       "supported by this capabilities instance. A setting can also be "
       "an embedded instance parameter to a method (for instance, when "
       "used as a Goal parameter). \n"
       "A NULL value for a property in a canned setting indicates "
       "support for a vendor-specific default. A NULL value for a "
       "property when the setting is used as a Goal parameter to a "
       "method indicates that the client does not care what value that "
       "property will have on creation and will accept any "
       "vendor-supplied default. When used with a FileSystem, a NULL "
       "value for a property must be interpreted as \"Unknown\". The "
       "ActualFileSystemType property cannot have a default value in "
       "any context. If this Setting is associated with a "
       "FileSystemCapabilities element via "
       "SettingAssociatedToCapabilities, the value of "
       "ActualFileSystemType in the Setting and the Capabilities MUST "
       "match. \n"
       "This class also supports persistence and recoverability of a "
       "FileSystem and its contained elements as defined in CIM 2.8 "
       "for the use of DatabaseStorageArea." )]
class CIM_FileSystemSetting : CIM_SettingData {

      [Description ( 
          "An enumerated value that indicates the file system "
          "implementation type supported by this Setting. This "
          "property MUST exist and have a value." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000.." }, 
       Values { "Unknown", "UFS", "HFS", "FAT", "FAT16", "FAT32", 
          "NTFS4", "NTFS5", "XFS", "AFS", "EXT2", "EXT3", 
          "REISERFS", "DMTF Reserved", "Vendor Defined" }, 
       Read, ModelCorrespondence { 
          "CIM_FileSystemCapabilities.ActualFileSystemType" }]
   uint16 ActualFileSystemType = 0;

      [Description ( 
          "An enumerated value that specifies if the FileSystem "
          "supports or enforces sharing of data extents between "
          "objects." ), 
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "No Sharing", 
          "Sharing Possible/Optional", "Sharing Enforced", 
          "DMTF Reserved", "Vendor Defined" }, 
       Read]
   uint16 DataExtentsSharing = 0;

      [Description ( 
          "An enumerated value that specifies if this FileSystem "
          "can be a target for synchronization with or mirror of "
          "another FileSystem, or if it cannot be a target." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Unknown", "Can be a Primary only", 
          "Can be a Mirror only", "Can be a Synchronization Target", 
          "Can be a Backup Target", "Write Once", "DMTF Reserved", 
          "Vendor Defined" }, 
       Read]
   uint16 CopyTarget = 0;

      [Description ( 
          "An enumerated value that specifies how this FileSystem "
          "supports the case of characters in the Filename. Note "
          "that the host and the service may support multiple "
          "conflicting features, but each FileSystem must be "
          "configured with only one of the supported features." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Unknown", "Case-sensitive", 
          "Case-forced to upper case", "Case-forced to lower-case", 
          "Case-indifferent but lost", 
          "Case-indifferent but preserved", "DMTF Reserved", 
          "Vendor Defined" }, 
       Read]
   uint16 FilenameCaseAttributes = 0;

      [Description ( 
          "An array of enumerated values that specifies the set of "
          "object types that this FileSystem supports. This array "
          "is associated with a number of correspondingly indexed "
          "properties that specify the size and number of such "
          "objects. \n"
          "When used as a goal, the client needs to specify only "
          "the subset of objects that they wish to specify; when "
          "used in a Setting associated with the FileSystem, this "
          "should contain all the types that the provider knows "
          "about; when used in a Setting associated with a "
          "Capabilities, this may only contain the types that the "
          "client can modify.\n"
          "\"inodes\" indicates that the number of required inodes "
          "is specified.\"files\" indicates that the number of "
          "required files is specified.\"directories\" indicates "
          "that the number of required directories is "
          "specified.\"links\" indicates that the number of "
          "required links is specified.\"devices\" indicates that "
          "the number of required devices is "
          "specified.\"files/directories\" indicates that the "
          "number of required files and directories is "
          "specified.\"blocks\" indicates that the size of required "
          "storage in client-specific storage units is specified. "
          "This represents the desired size of available space in "
          "the filesystem, exclusive of space reserved for "
          "meta-data and for other system functions. If \"blocks\" "
          "is specified, the corresponding ObjectSize properties "
          "must all be the same and must specify the intended size "
          "of the blocks in bytes." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", "0x8000.." }, 
       Values { "inodes", "files", "directories", "links", 
          "devices", "files/directories", "Blocks", "DMTF Reserved", 
          "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.NumberOfObjects", 
          "CIM_FileSystemSetting.NumberOfObjectsMax", 
          "CIM_FileSystemSetting.NumberOfObjectsMin", 
          "CIM_FileSystemSetting.ObjectSize", 
          "CIM_FileSystemSetting.ObjectSizeMax", 
          "CIM_FileSystemSetting.ObjectSizeMin" }]
   uint16 ObjectTypes[];

      [Description ( 
          "An array of integers that specifies the minimum number "
          "of objects (corresponding to the entry in the "
          "ObjectTypes array) that this FileSystem MUST be able to "
          "contain. A value of 0 implies that there is no specific "
          "minimum associated with this setting." ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }]
   uint64 NumberOfObjectsMin[];

      [Description ( 
          "An array of integers that specifies the maximum number "
          "of objects (corresponding to the entry in the "
          "ObjectTypes array) that this FileSystem MUST be able to "
          "contain. A value of 0 implies that there is no specific "
          "maximum associated with this setting." ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }]
   uint64 NumberOfObjectsMax[];

      [Description ( 
          "An array of integers that specifies the number of "
          "objects (corresponding to the entry in the ObjectTypes "
          "array) that this FileSystem will \"normally\" contain. A "
          "value of 0 implies that there is no specific number "
          "associated with this setting. When the Setting is "
          "associated with a FileSystemCapabilities element, this "
          "is the default; When the Setting is associated with a "
          "FileSystem element, this is the expected value; When the "
          "Setting is used as an embedded parameter to a method "
          "this is the goal." ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }]
   uint64 NumberOfObjects[];

      [Description ( 
          "An array of integers that specifies the size of objects "
          "(corresponding to the entry in the ObjectTypes array) "
          "that this FileSystem will \"normally\" contain. A value "
          "of 0 implies that there is no specific number associated "
          "with this setting. When the Setting is associated with a "
          "FileSystemCapabilities element, this is the default; "
          "When the Setting is associated with a FileSystem "
          "element, this is the expected value; When the Setting is "
          "used as an embedded parameter to a method this is the "
          "goal." ), 
       Units ( "Bytes" ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }, 
       PUnit ( "byte" )]
   uint64 ObjectSize[];

      [Description ( 
          "An array of integers that specifies the minimum size of "
          "objects (corresponding to the entry in the ObjectTypes "
          "array) that this FileSystem will \"normally\" contain. A "
          "value of 0 implies that there is no specific minimum "
          "associated with this setting." ), 
       Units ( "Bytes" ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }, 
       PUnit ( "byte" )]
   uint64 ObjectSizeMin[];

      [Description ( 
          "An array of integers that specifies the maximum size of "
          "objects (corresponding to the entry in the ObjectTypes "
          "array) that this FileSystem will \"normally\" contain. A "
          "value of 0 implies that there is no specific maximum "
          "associated with this setting." ), 
       Units ( "Bytes" ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.ObjectTypes" }, 
       PUnit ( "byte" )]
   uint64 ObjectSizeMax[];

      [Description ( 
          "An array of enumerated integers representing the "
          "filename stream formats that the file system can support "
          "for access. The interpretation of these stream formats "
          "can be specific to vendors, or provided by some "
          "standard. But even within those constraints, the "
          "interpretation could be locale-specific or "
          "version-specific. For instance, Bytestream is "
          "locale-specific and is interpreted as ASCII for NFS v2 "
          "and v3 but UTF-8 in NFS v4. This additional information "
          "will normally be provided in the setting for the "
          "protocol used to access an element of this file system." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000.." }, 
       Values { "ASCII", "WideChar", "MBCS", "UTF-8", 
          "UNICODE UCS-16", "UNICODE UCS-32", 
          "CIFS Client-interpreted", "Bytestream", "DMTF Reserved", 
          "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read]
   uint16 FilenameStreamFormats[];

      [Description ( 
          "An array of enumerated values that specify the filename "
          "formats supported on this FileSystem for naming files. "
          "Some common formats are: \n"
          "a) DOS 8.3 \n"
          "b) VMS \'name.extension;version\' where the extension "
          "specifies a file type \n"
          "c) Unix name (file type is not specified in the name) \n"
          "d) Windows \'name{.ext}*\' where any of the exts can "
          "specify a file type \n"
          "For each entry in this array there is an associated "
          "maximum length for the name and an associated reserved "
          "set of characters. \n"
          "The interpretation of the maximum length of the name as "
          "well as the FilenameReservedCharacterSet string is "
          "vendor-specific." ), 
       ValueMap { "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "DOS8.3", "Unix", "VMS", "Windows LongNames", 
          "DMTF Reserved", "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.FilenameLengthMax", 
          "CIM_FileSystemSetting.FilenameReservedCharacterSet" }]
   uint16 FilenameFormats[];

      [Description ( 
          "An array of integers that specify the maximum number of "
          "characters in a filename corresponding to an entry in "
          "the FilenameFormats property. \n"
          "An entry of \'0xFFFF\' (the largest 16-bit integer) is "
          "interpreted as an indefinite length." ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.FilenameFormats" }]
   uint16 FilenameLengthMax[];

      [Description ( 
          "An array of strings that specifies the characters that "
          "may not appear in the name of any file contained by this "
          "FileSystem corresponding to the entry in the "
          "FilenameFormats property. \n"
          "Note: It is not clear exactly how this works with the "
          "FilenameStreamFormats property above, since the format "
          "implicitly specifies the set of allowed characters." ), 
       ArrayType ( "Indexed" ), 
       Read, ModelCorrespondence { 
          "CIM_FileSystemSetting.FilenameFormats" }]
   string FilenameReservedCharacterSet[];

      [Description ( 
          "An array of enumerated values that represent the locking "
          "semantics that the FileSystem can support for controlled "
          "access. A file system can support more than one locking "
          "model. Just because a file system supports more than one "
          "model does not imply that it supports them "
          "simultaneously for an element." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000.." }, 
       Values { "NLM/NFSv3", "NFSv4 Share Reservations", 
          "NFSv4 Byte-range locking", "NFSv4 Delegations", 
          "CIFS Sharing locks", "CIFS Byte-range locks", 
          "CIFS Exclusive/Batch oplocks", "CIFS Level II oplocks", 
          "DMTF Reserved", "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read]
   uint16 SupportedLockingSemantics[];

      [Description ( 
          "An array of enumerated values that represent the "
          "authorization protocols that the FileSystem will support "
          "for access to objects by users, groups, accounts, etc. A "
          "FileSystem can support more than one authorization "
          "protocol." ), 
       ValueMap { "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Posix Permissions", "Posix ACLs", "NFSv4 ACLs", 
          "NTFS4", "NTFS5", "DMTF Reserved", "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read]
   uint16 SupportedAuthorizationProtocols[];

      [Description ( 
          "An array of enumerated values that represent the "
          "authentication protocols that the FileSystem will "
          "support for access to objects by users, groups, "
          "accounts, etc.. \n"
          "An entry of \'0\' is not allowed. \n"
          "A FileSystem can support more than one authentication "
          "protocol." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "..", "0x8000.." }, 
       Values { "AUTH_NONE", "AUTH_SYS", "AUTH_DH", "AUTH_KRB4", 
          "AUTH_KRB5", "RPCSEC_GSS LIPKEY", "RPCSEC_GSS SPKM-3", 
          "RPCSEC_GSS Challenge-Response", "NTLM v1", "NTLM v2", 
          "Plain Text", "DMTF Reserved", "Vendor Defined" }, 
       ArrayType ( "Indexed" ), 
       Read]
   uint16 SupportedAuthenticationProtocols[];

      [Description ( 
          "An array of enumerated values representing the "
          "persistence attributes of the FileSystem. A value of "
          "\"Persistent\" indicates that the FileSystem supports "
          "persistence, can be preserved through an orderly "
          "shutdown and could be protected. A value of \"Temporary\" "
          "indicates that the FileSystem supports non-persistence, "
          "may not be protected and may not survive a shutdown. A "
          "value of \"External\" indicates that the FileSystem "
          "could controlled outside of the operating environment "
          "and may need to be protected by specialized means. A "
          "value of \"Other\" is provided to allow for additional "
          "persistence types, to be described in the corresponding "
          "entry of the OtherPersistenceTypes property, and is "
          "expected to be rarely, if ever, used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5.." }, 
       Values { "Unknown", "Other", "Persistent", "Temporary", 
          "External", "DMTF Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemSetting.OtherPersistenceTypes", 
          "CIM_FileSystem.PersistenceType" }]
   uint16 PersistenceTypes[];

      [Description ( 
          "An array of strings describing the persistence "
          "attributes where the corresponding entry in the "
          "PersistenceTypes property has a value of \"Other\". This "
          "value is ignored in all other cases." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemSetting.PersistenceTypes", 
          "CIM_FileSystem.OtherPersistenceType" }]
   string OtherPersistenceTypes[];


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_FileSystemSetting : CIM_FileSystemSetting
{


};

