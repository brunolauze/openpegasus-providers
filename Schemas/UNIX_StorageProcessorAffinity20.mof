//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Experimental, Version ( "2.18.0" ), 
    ClassConstraint { 
       "inv:self.Dependent.oclIsKindOf(CIM_TargetPortGroup) or self.Dependent.oclIsKindOf(CIM_StorageResourceLoadGroup)" }, 
    UMLPackagePath ( "CIM::Device::Dependency" ), 
    Description ( 
       "StorageProcessorAffinity indicates a processing affinity and "
       "state between a TargetPortGroup or StorageResourceLoadGroup "
       "and a ComputerSystem representing a storage processor in a "
       "redundant storage server. The processor can host the group in "
       "either a healthy or failover state. Instances of this "
       "association are static, one for each combination of "
       "StorageResourceLoadGroup and ComputerSystem in the "
       "RedundancySet." )]
class CIM_StorageProcessorAffinity : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The storage processor for which the Port Group or "
          "Storage Resource Load Group has affinity." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Target Port Group or Storage Resource Load Group." )]
   CIM_Collection REF Dependent;

      [Description ( 
          "This property is set to true if the TargetPortGroup or "
          "StorageResourceLoadGroup is hosted by the storage "
          "processor when the processor is healthy. It is set to "
          "false if the group can be hosted by the processor when "
          "the primary storage processor for the group has failed. "
          "This property is static, as is the association itself. "
          "For each StorageResourceLoadGroup, one instance of "
          "StorageProcessorAffinity will have IsPrimary=true, the "
          "rest will have IsPrimary=false." )]
   boolean IsPrimary;

      [Description ( 
          "This property is set to true if the TargetPortGroup or "
          "StorageResourceLoadGroup is currently being hosted by "
          "the storage processor." )]
   boolean IsActive;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_StorageProcessorAffinity : CIM_StorageProcessorAffinity
{


};

