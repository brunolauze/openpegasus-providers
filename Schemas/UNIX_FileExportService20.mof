//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2011 DMTF.  All rights reserved.
   [Abstract, Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ManagedSystemElement is the base class for the System "
       "Element hierarchy. Any distinguishable component of a System "
       "is a candidate for inclusion in this class. Examples of system "
       "components include: \n"
       "- software components such as application servers, databases, "
       "and applications \n"
       "- operating system components such as files, processes, and "
       "threads \n"
       "- device components such as disk drives, controllers, "
       "processors, and printers \n"
       "- physical components such as chips and cards." )]
class CIM_ManagedSystemElement : CIM_ManagedElement {

      [Description ( 
          "A datetime value that indicates when the object was "
          "installed. Lack of a value does not indicate that the "
          "object is not installed." ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.5" }]
   datetime InstallDate;

      [Description ( 
          "The Name property defines the label by which the object "
          "is known. When subclassed, the Name property can be "
          "overridden to be a Key property." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "Indicates the current statuses of the element. Various "
          "operational statuses are defined. Many of the "
          "enumeration\'s values are self-explanatory. However, a "
          "few are not and are described here in more detail. \n"
          "\"Stressed\" indicates that the element is functioning, "
          "but needs attention. Examples of \"Stressed\" states are "
          "overload, overheated, and so on. \n"
          "\"Predictive Failure\" indicates that an element is "
          "functioning nominally but predicting a failure in the "
          "near future. \n"
          "\"In Service\" describes an element being configured, "
          "maintained, cleaned, or otherwise administered. \n"
          "\"No Contact\" indicates that the monitoring system has "
          "knowledge of this element, but has never been able to "
          "establish communications with it. \n"
          "\"Lost Communication\" indicates that the ManagedSystem "
          "Element is known to exist and has been contacted "
          "successfully in the past, but is currently unreachable. \n"
          "\"Stopped\" and \"Aborted\" are similar, although the "
          "former implies a clean and orderly stop, while the "
          "latter implies an abrupt stop where the state and "
          "configuration of the element might need to be updated. \n"
          "\"Dormant\" indicates that the element is inactive or "
          "quiesced. \n"
          "\"Supporting Entity in Error\" indicates that this "
          "element might be \"OK\" but that another element, on "
          "which it is dependent, is in error. An example is a "
          "network service or endpoint that cannot function due to "
          "lower-layer networking problems. \n"
          "\"Completed\" indicates that the element has completed "
          "its operation. This value should be combined with either "
          "OK, Error, or Degraded so that a client can tell if the "
          "complete operation Completed with OK (passed), Completed "
          "with Error (failed), or Completed with Degraded (the "
          "operation finished, but it did not complete OK or did "
          "not report an error). \n"
          "\"Power Mode\" indicates that the element has additional "
          "power model information contained in the Associated "
          "PowerManagementService association. \n"
          "\"Relocating\" indicates the element is being relocated.\n"
          "OperationalStatus replaces the Status property on "
          "ManagedSystemElement to provide a consistent approach to "
          "enumerations, to address implementation needs for an "
          "array property, and to provide a migration path from "
          "today\'s environment to the future. This change was not "
          "made earlier because it required the deprecated "
          "qualifier. Due to the widespread use of the existing "
          "Status property in management applications, it is "
          "strongly recommended that providers or instrumentation "
          "provide both the Status and OperationalStatus "
          "properties. Further, the first value of "
          "OperationalStatus should contain the primary status for "
          "the element. When instrumented, Status (because it is "
          "single-valued) should also provide the primary status of "
          "the element." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "OK", "Degraded", "Stressed", 
          "Predictive Failure", "Error", "Non-Recoverable Error", 
          "Starting", "Stopping", "Stopped", "In Service", 
          "No Contact", "Lost Communication", "Aborted", "Dormant", 
          "Supporting Entity in Error", "Completed", "Power Mode", 
          "Relocating", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.StatusDescriptions" }]
   uint16 OperationalStatus[];

      [Description ( 
          "Strings describing the various OperationalStatus array "
          "values. For example, if \"Stopping\" is the value "
          "assigned to OperationalStatus, then this property may "
          "contain an explanation as to why an object is being "
          "stopped. Note that entries in this array are correlated "
          "with those at the same array index in OperationalStatus." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.OperationalStatus" }]
   string StatusDescriptions[];

      [Deprecated { "CIM_ManagedSystemElement.OperationalStatus" }, 
       Description ( 
          "A string indicating the current status of the object. "
          "Various operational and non-operational statuses are "
          "defined. This property is deprecated in lieu of "
          "OperationalStatus, which includes the same semantics in "
          "its enumeration. This change is made for 3 reasons: \n"
          "1) Status is more correctly defined as an array. This "
          "definition overcomes the limitation of describing status "
          "using a single value, when it is really a multi-valued "
          "property (for example, an element might be OK AND "
          "Stopped. \n"
          "2) A MaxLen of 10 is too restrictive and leads to "
          "unclear enumerated values. \n"
          "3) The change to a uint16 data type was discussed when "
          "CIM V2.0 was defined. However, existing V1.0 "
          "implementations used the string property and did not "
          "want to modify their code. Therefore, Status was "
          "grandfathered into the Schema. Use of the deprecated "
          "qualifier allows the maintenance of the existing "
          "property, but also permits an improved definition using "
          "OperationalStatus." ), 
       ValueMap { "OK", "Error", "Degraded", "Unknown", "Pred Fail", 
          "Starting", "Stopping", "Service", "Stressed", 
          "NonRecover", "No Contact", "Lost Comm", "Stopped" }, 
       MaxLen ( 10 )]
   string Status;

      [Description ( 
          "Indicates the current health of the element. This "
          "attribute expresses the health of this element but not "
          "necessarily that of its subcomponents. The possible "
          "values are 0 to 30, where 5 means the element is "
          "entirely healthy and 30 means the element is completely "
          "non-functional. The following continuum is defined: \n"
          "\"Non-recoverable Error\" (30) - The element has "
          "completely failed, and recovery is not possible. All "
          "functionality provided by this element has been lost. \n"
          "\"Critical Failure\" (25) - The element is "
          "non-functional and recovery might not be possible. \n"
          "\"Major Failure\" (20) - The element is failing. It is "
          "possible that some or all of the functionality of this "
          "component is degraded or not working. \n"
          "\"Minor Failure\" (15) - All functionality is available "
          "but some might be degraded. \n"
          "\"Degraded/Warning\" (10) - The element is in working "
          "order and all functionality is provided. However, the "
          "element is not working to the best of its abilities. For "
          "example, the element might not be operating at optimal "
          "performance or it might be reporting recoverable errors. \n"
          "\"OK\" (5) - The element is fully functional and is "
          "operating within normal operational parameters and "
          "without error. \n"
          "\"Unknown\" (0) - The implementation cannot report on "
          "HealthState at this time. \n"
          "DMTF has reserved the unused portion of the continuum "
          "for additional HealthStates in the future." ), 
       ValueMap { "0", "5", "10", "15", "20", "25", "30", "..", 
          "32768..65535" }, 
       Values { "Unknown", "OK", "Degraded/Warning", 
          "Minor failure", "Major failure", "Critical failure", 
          "Non-recoverable error", "DMTF Reserved", "Vendor Specific" }]
   uint16 HealthState;

      [Description ( 
          "CommunicationStatus indicates the ability of the "
          "instrumentation to communicate with the underlying "
          "ManagedElement. CommunicationStatus consists of one of "
          "the following values: Unknown, None, Communication OK, "
          "Lost Communication, or No Contact. \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Unknown\" indicates the implementation is in general "
          "capable of returning this property, but is unable to do "
          "so at this time. \n"
          "\"Not Available\" indicates that the implementation "
          "(provider) is capable of returning a value for this "
          "property, but not ever for this particular piece of "
          "hardware/software or the property is intentionally not "
          "used because it adds no meaningful information (as in "
          "the case of a property that is intended to add "
          "additional info to another property). \n"
          "\"Communication OK \" indicates communication is "
          "established with the element, but does not convey any "
          "quality of service. \n"
          "\"No Contact\" indicates that the monitoring system has "
          "knowledge of this element, but has never been able to "
          "establish communications with it. \n"
          "\"Lost Communication\" indicates that the Managed "
          "Element is known to exist and has been contacted "
          "successfully in the past, but is currently unreachable." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "Unknown", "Not Available", "Communication OK", 
          "Lost Communication", "No Contact", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 CommunicationStatus;

      [Description ( 
          "DetailedStatus compliments PrimaryStatus with additional "
          "status detail. It consists of one of the following "
          "values: Not Available, No Additional Information, "
          "Stressed, Predictive Failure, Error, Non-Recoverable "
          "Error, SupportingEntityInError. Detailed status is used "
          "to expand upon the PrimaryStatus of the element. \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Not Available\" indicates that the implementation "
          "(provider) is capable of returning a value for this "
          "property, but not ever for this particular piece of "
          "hardware/software or the property is intentionally not "
          "used because it adds no meaningful information (as in "
          "the case of a property that is intended to add "
          "additional info to another property). \n"
          "\"No Additional Information\" indicates that the element "
          "is functioning normally as indicated by PrimaryStatus = "
          "\"OK\". \n"
          "\"Stressed\" indicates that the element is functioning, "
          "but needs attention. Examples of \"Stressed\" states are "
          "overload, overheated, and so on. \n"
          "\"Predictive Failure\" indicates that an element is "
          "functioning normally but a failure is predicted in the "
          "near future. \n"
          "\"Non-Recoverable Error \" indicates that this element "
          "is in an error condition that requires human "
          "intervention. \n"
          "\"Supporting Entity in Error\" indicates that this "
          "element might be \"OK\" but that another element, on "
          "which it is dependent, is in error. An example is a "
          "network service or endpoint that cannot function due to "
          "lower-layer networking problems." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Available", "No Additional Information", 
          "Stressed", "Predictive Failure", "Non-Recoverable Error", 
          "Supporting Entity in Error", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.PrimaryStatus", 
          "CIM_ManagedSystemElement.HealthState" }]
   uint16 DetailedStatus;

      [Description ( 
          "OperatingStatus provides a current status value for the "
          "operational condition of the element and can be used for "
          "providing more detail with respect to the value of "
          "EnabledState. It can also provide the transitional "
          "states when an element is transitioning from one state "
          "to another, such as when an element is transitioning "
          "between EnabledState and RequestedState, as well as "
          "other transitional conditions.\n"
          "OperatingStatus consists of one of the following values: "
          "Unknown, Not Available, In Service, Starting, Stopping, "
          "Stopped, Aborted, Dormant, Completed, Migrating, "
          "Emmigrating, Immigrating, Snapshotting. Shutting Down, "
          "In Test \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Unknown\" indicates the implementation is in general "
          "capable of returning this property, but is unable to do "
          "so at this time. \n"
          "\"None\" indicates that the implementation (provider) is "
          "capable of returning a value for this property, but not "
          "ever for this particular piece of hardware/software or "
          "the property is intentionally not used because it adds "
          "no meaningful information (as in the case of a property "
          "that is intended to add additional info to another "
          "property). \n"
          "\"Servicing\" describes an element being configured, "
          "maintained, cleaned, or otherwise administered. \n"
          "\"Starting\" describes an element being initialized. \n"
          "\"Stopping\" describes an element being brought to an "
          "orderly stop. \n"
          "\"Stopped\" and \"Aborted\" are similar, although the "
          "former implies a clean and orderly stop, while the "
          "latter implies an abrupt stop where the state and "
          "configuration of the element might need to be updated. \n"
          "\"Dormant\" indicates that the element is inactive or "
          "quiesced. \n"
          "\"Completed\" indicates that the element has completed "
          "its operation. This value should be combined with either "
          "OK, Error, or Degraded in the PrimaryStatus so that a "
          "client can tell if the complete operation Completed with "
          "OK (passed), Completed with Error (failed), or Completed "
          "with Degraded (the operation finished, but it did not "
          "complete OK or did not report an error). \n"
          "\"Migrating\" element is being moved between host "
          "elements. \n"
          "\"Immigrating\" element is being moved to new host "
          "element. \n"
          "\"Emigrating\" element is being moved away from host "
          "element. \n"
          "\"Shutting Down\" describes an element being brought to "
          "an abrupt stop. \n"
          "\"In Test\" element is performing test functions. \n"
          "\"Transitioning\" describes an element that is between "
          "states, that is, it is not fully available in either its "
          "previous state or its next state. This value should be "
          "used if other values indicating a transition to a "
          "specific state are not applicable.\n"
          "\"In Service\" describes an element that is in service "
          "and operational." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "..", "0x8000.." }, 
       Values { "Unknown", "Not Available", "Servicing", "Starting", 
          "Stopping", "Stopped", "Aborted", "Dormant", "Completed", 
          "Migrating", "Emigrating", "Immigrating", "Snapshotting", 
          "Shutting Down", "In Test", "Transitioning", "In Service", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 OperatingStatus;

      [Description ( 
          "PrimaryStatus provides a high level status value, "
          "intended to align with Red-Yellow-Green type "
          "representation of status. It should be used in "
          "conjunction with DetailedStatus to provide high level "
          "and detailed health status of the ManagedElement and its "
          "subcomponents. \n"
          "PrimaryStatus consists of one of the following values: "
          "Unknown, OK, Degraded or Error. \"Unknown\" indicates "
          "the implementation is in general capable of returning "
          "this property, but is unable to do so at this time. \n"
          "\"OK\" indicates the ManagedElement is functioning "
          "normally. \n"
          "\"Degraded\" indicates the ManagedElement is functioning "
          "below normal. \n"
          "\"Error\" indicates the ManagedElement is in an Error "
          "condition." ), 
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "OK", "Degraded", "Error", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.DetailedStatus", 
          "CIM_ManagedSystemElement.HealthState" }]
   uint16 PrimaryStatus;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_LogicalElement is a base class for all the components of a "
       "System that represent abstract system components, such as "
       "Files, Processes, or LogicalDevices." )]
class CIM_LogicalElement : CIM_ManagedSystemElement {


};



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "This class extends LogicalElement to abstract the concept of "
       "an element that is enabled and disabled, such as a "
       "LogicalDevice or a ServiceAccessPoint." )]
class CIM_EnabledLogicalElement : CIM_LogicalElement {

      [Description ( 
          "EnabledState is an integer enumeration that indicates "
          "the enabled and disabled states of an element. It can "
          "also indicate the transitions between these requested "
          "states. For example, shutting down (value=4) and "
          "starting (value=10) are transient states between enabled "
          "and disabled. The following text briefly summarizes the "
          "various enabled and disabled states: \n"
          "Enabled (2) indicates that the element is or could be "
          "executing commands, will process any queued commands, "
          "and queues new requests. \n"
          "Disabled (3) indicates that the element will not execute "
          "commands and will drop any new requests. \n"
          "Shutting Down (4) indicates that the element is in the "
          "process of going to a Disabled state. \n"
          "Not Applicable (5) indicates the element does not "
          "support being enabled or disabled. \n"
          "Enabled but Offline (6) indicates that the element might "
          "be completing commands, and will drop any new requests. \n"
          "Test (7) indicates that the element is in a test state. \n"
          "Deferred (8) indicates that the element might be "
          "completing commands, but will queue any new requests. \n"
          "Quiesce (9) indicates that the element is enabled but in "
          "a restricted mode.\n"
          "Starting (10) indicates that the element is in the "
          "process of going to an Enabled state. New requests are "
          "queued." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Enabled", "Disabled", 
          "Shutting Down", "Not Applicable", "Enabled but Offline", 
          "In Test", "Deferred", "Quiesce", "Starting", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.OtherEnabledState" }]
   uint16 EnabledState = 5;

      [Description ( 
          "A string that describes the enabled or disabled state of "
          "the element when the EnabledState property is set to 1 "
          "(\"Other\"). This property must be set to null when "
          "EnabledState is any value other than 1." ), 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   string OtherEnabledState;

      [Description ( 
          "RequestedState is an integer enumeration that indicates "
          "the last requested or desired state for the element, "
          "irrespective of the mechanism through which it was "
          "requested. The actual state of the element is "
          "represented by EnabledState. This property is provided "
          "to compare the last requested and current enabled or "
          "disabled states. Note that when EnabledState is set to 5 "
          "(\"Not Applicable\"), then this property has no meaning. "
          "Refer to the EnabledState property description for "
          "explanations of the values in the RequestedState "
          "enumeration. \n"
          "\"Unknown\" (0) indicates the last requested state for "
          "the element is unknown.\n"
          "Note that the value \"No Change\" (5) has been "
          "deprecated in lieu of indicating the last requested "
          "state is \"Unknown\" (0). If the last requested or "
          "desired state is unknown, RequestedState should have the "
          "value \"Unknown\" (0), but may have the value \"No "
          "Change\" (5).Offline (6) indicates that the element has "
          "been requested to transition to the Enabled but Offline "
          "EnabledState. \n"
          "It should be noted that there are two new values in "
          "RequestedState that build on the statuses of "
          "EnabledState. These are \"Reboot\" (10) and \"Reset\" "
          "(11). Reboot refers to doing a \"Shut Down\" and then "
          "moving to an \"Enabled\" state. Reset indicates that the "
          "element is first \"Disabled\" and then \"Enabled\". The "
          "distinction between requesting \"Shut Down\" and "
          "\"Disabled\" should also be noted. Shut Down requests an "
          "orderly transition to the Disabled state, and might "
          "involve removing power, to completely erase any existing "
          "state. The Disabled state requests an immediate "
          "disabling of the element, such that it will not execute "
          "or accept any commands or processing requests. \n"
          "\n"
          "This property is set as the result of a method "
          "invocation (such as Start or StopService on "
          "CIM_Service), or can be overridden and defined as "
          "WRITEable in a subclass. The method approach is "
          "considered superior to a WRITEable property, because it "
          "allows an explicit invocation of the operation and the "
          "return of a result code. \n"
          "\n"
          "If knowledge of the last RequestedState is not supported "
          "for the EnabledLogicalElement, the property shall be "
          "NULL or have the value 12 \"Not Applicable\"." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "32768..65535" }, 
       Values { "Unknown", "Enabled", "Disabled", "Shut Down", 
          "No Change", "Offline", "Test", "Deferred", "Quiesce", 
          "Reboot", "Reset", "Not Applicable", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 RequestedState = 12;

      [Write, Description ( 
          "An enumerated value indicating an administrator\'s "
          "default or startup configuration for the Enabled State "
          "of an element. By default, the element is \"Enabled\" "
          "(value=2)." ), 
       ValueMap { "2", "3", "5", "6", "7", "9", "..", "32768..65535" }, 
       Values { "Enabled", "Disabled", "Not Applicable", 
          "Enabled but Offline", "No Default", "Quiesce", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 EnabledDefault = 2;

      [Description ( 
          "The date or time when the EnabledState of the element "
          "last changed. If the state of the element has not "
          "changed and this property is populated, then it must be "
          "set to a 0 interval value. If a state change was "
          "requested, but rejected or not yet processed, the "
          "property must not be updated." )]
   datetime TimeOfLastStateChange;

      [Description ( 
          "AvailableRequestedStates indicates the possible values "
          "for the RequestedState parameter of the method "
          "RequestStateChange, used to initiate a state change. The "
          "values listed shall be a subset of the values contained "
          "in the RequestedStatesSupported property of the "
          "associated instance of "
          "CIM_EnabledLogicalElementCapabilities where the values "
          "selected are a function of the current state of the "
          "CIM_EnabledLogicalElement. This property may be non-null "
          "if an implementation is able to advertise the set of "
          "possible values as a function of the current state. This "
          "property shall be null if an implementation is unable to "
          "determine the set of possible values as a function of "
          "the current state." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", "11", ".." }, 
       Values { "Enabled", "Disabled", "Shut Down", "Offline", 
          "Test", "Defer", "Quiesce", "Reboot", "Reset", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange", 
          "CIM_EnabledLogicalElementCapabilities.RequestedStatesSupported" }]
   uint16 AvailableRequestedStates[];

      [Description ( 
          "TransitioningToState indicates the target state to which "
          "the instance is transitioning. \n"
          "A value of 5 \"No Change\" shall indicate that no "
          "transition is in progress.A value of 12 \"Not "
          "Applicable\" shall indicate the implementation does not "
          "support representing ongoing transitions. \n"
          "A value other than 5 or 12 shall identify the state to "
          "which the element is in the process of transitioning." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", ".." }, 
       Values { "Unknown", "Enabled", "Disabled", "Shut Down", 
          "No Change", "Offline", "Test", "Defer", "Quiesce", 
          "Reboot", "Reset", "Not Applicable", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange", 
          "CIM_EnabledLogicalElement.RequestedState", 
          "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 TransitioningToState = 12;


      [Description ( 
          "Requests that the state of the element be changed to the "
          "value specified in the RequestedState parameter. When "
          "the requested state change takes place, the EnabledState "
          "and RequestedState of the element will be the same. "
          "Invoking the RequestStateChange method multiple times "
          "could result in earlier requests being overwritten or "
          "lost. \n"
          "A return code of 0 shall indicate the state change was "
          "successfully initiated. \n"
          "A return code of 3 shall indicate that the state "
          "transition cannot complete within the interval specified "
          "by the TimeoutPeriod parameter. \n"
          "A return code of 4096 (0x1000) shall indicate the state "
          "change was successfully initiated, a ConcreteJob has "
          "been created, and its reference returned in the output "
          "parameter Job. Any other return code indicates an error "
          "condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", 
          "Cannot complete within Timeout Period", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Invalid State Transition", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "Method Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestedState" }]
   uint32 RequestStateChange(
         [IN, Description ( 
             "The state requested for the element. This "
             "information will be placed into the RequestedState "
             "property of the instance if the return code of the "
             "RequestStateChange method is 0 (\'Completed with "
             "No Error\'), or 4096 (0x1000) (\'Job Started\'). "
             "Refer to the description of the EnabledState and "
             "RequestedState properties for the detailed "
             "explanations of the RequestedState values." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", 
             "11", "..", "32768..65535" }, 
          Values { "Enabled", "Disabled", "Shut Down", "Offline", 
             "Test", "Defer", "Quiesce", "Reboot", "Reset", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ModelCorrespondence { 
             "CIM_EnabledLogicalElement.RequestedState" }]
      uint16 RequestedState, 
         [IN ( false ), OUT, Description ( 
             "May contain a reference to the ConcreteJob created "
             "to track the state transition initiated by the "
             "method invocation." )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client expects the transition to "
             "the new state to take. The interval format must be "
             "used to specify the TimeoutPeriod. A value of 0 or "
             "a null parameter indicates that the client has no "
             "time requirements for the transition. \n"
             "If this property does not contain 0 or null and "
             "the implementation does not support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' shall be returned." )]
      datetime TimeoutPeriod);

};



// Copyright (c) 2012 DMTF.  All rights reserved.
   [Abstract, Version ( "2.38.0" ), 
    ClassConstraint { "inv: LoSID <> null implies LoSOrgID <> null" }, 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "A Service is a LogicalElement that represents the availability "
       "of functionality that can be managed. This functionality may "
       "be provided by a seperately modeled entity such as a "
       "LogicalDevice or a SoftwareFeature, or both. The modeled "
       "Service typically provides only functionality required for "
       "management of itself or the elements it affects." )]
class CIM_Service : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The CreationClassName of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass that is used in the creation of an instance. "
          "When used with the other key properties of this class, "
          "this property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property uniquely identifies the Service and "
          "provides an indication of the functionality that is "
          "managed. This functionality is described in more detail "
          "in the Description property of the object." ), 
       MaxLen ( 256 )]
   string Name;

      [Write, Description ( 
          "The name of the primary owner for the service, if one is "
          "defined. The primary owner is the initial support "
          "contact for the Service." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|General Information|001.3" }]
   string PrimaryOwnerName;

      [Write, Description ( 
          "A string that provides information on how the primary "
          "owner of the Service can be reached (for example, phone "
          "number, e-mail address, and so on)." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|General Information|001.4" }]
   string PrimaryOwnerContact;

      [Deprecated { "CIM_Service.EnabledDefault" }, 
       Description ( 
          "Note: The use of this element is deprecated in lieu of "
          "the EnabledDefault property that is inherited from "
          "EnabledLogicalElement. The EnabledLogicalElement "
          "addresses the same semantics. The change to a uint16 "
          "data type was discussed when CIM V2.0 was defined. "
          "However, existing V1.0 implementations used the string "
          "property. To remain compatible with those "
          "implementations, StartMode was grandfathered into the "
          "schema. Use of the deprecated qualifier allows the "
          "maintenance of the existing property but also permits an "
          "improved, clarified definition using EnabledDefault. \n"
          "Deprecated description: StartMode is a string value that "
          "indicates whether the Service is automatically started "
          "by a System, an Operating System, and so on, or is "
          "started only upon request." ), 
       ValueMap { "Automatic", "Manual" }, 
       MaxLen ( 10 )]
   string StartMode;

      [Description ( 
          "Started is a Boolean that indicates whether the Service "
          "has been started (TRUE), or stopped (FALSE)." )]
   boolean Started;

      [Experimental, Description ( 
          "If not Null, the CIM_Service instance represents a line "
          "of service, as defined by ITIL, identified by the value "
          "of LoSID, which must be unique in the context of an "
          "unique identifier for an Organization specified in "
          "LoSOrgID." ), 
       ModelCorrespondence { "CIM_Service.LoSOrgID" }]
   string LoSID;

      [Experimental, Description ( 
          "If not null, this CIM_Service instance represents an "
          "ITIL line of service and the value of LoSOrgID shall be "
          "a unique identifier for the organization that defines "
          "the value of LoSID." ), 
       ModelCorrespondence { "CIM_Service.LoSID" }]
   string LoSOrgID;


      [Deprecated { "CIM_Service.RequestStateChange" }, 
       Description ( 
          "The StartService method places the Service in the "
          "started state. Note that the function of this method "
          "overlaps with the RequestedState property. "
          "RequestedState was added to the model to maintain a "
          "record (such as a persisted value) of the last state "
          "request. Invoking the StartService method should set the "
          "RequestedState property appropriately. The method "
          "returns an integer value of 0 if the Service was "
          "successfully started, 1 if the request is not supported, "
          "and any other number to indicate an error. In a "
          "subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are translated "
          "can also be specified in the subclass as a Values array "
          "qualifier. \n"
          "\n"
          "Note: The semantics of this method overlap with the "
          "RequestStateChange method that is inherited from "
          "EnabledLogicalElement. This method is maintained because "
          "it has been widely implemented, and its simple \"start\" "
          "semantics are convenient to use." )]
   uint32 StartService(
);

      [Deprecated { "CIM_Service.RequestStateChange" }, 
       Description ( 
          "The StopService method places the Service in the stopped "
          "state. Note that the function of this method overlaps "
          "with the RequestedState property. RequestedState was "
          "added to the model to maintain a record (such as a "
          "persisted value) of the last state request. Invoking the "
          "StopService method should set the RequestedState "
          "property appropriately. The method returns an integer "
          "value of 0 if the Service was successfully stopped, 1 if "
          "the request is not supported, and any other number to "
          "indicate an error. In a subclass, the set of possible "
          "return codes could be specified using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are translated can also be specified "
          "in the subclass as a Values array qualifier. \n"
          "\n"
          "Note: The semantics of this method overlap with the "
          "RequestStateChange method that is inherited from "
          "EnabledLogicalElement. This method is maintained because "
          "it has been widely implemented, and its simple \"stop\" "
          "semantics are convenient to use." )]
   uint32 StopService(
);

      [Experimental, Description ( 
          "This method is called to change relative sequence in "
          "which order the ManagedElements associated to the "
          "Service through CIM_ServiceAffectsElement association "
          "are affected. In the case when the Service represents an "
          "interface for client to execute extrinsic methods and "
          "when it is used for grouping of the managed elements "
          "that could be affected, the ordering represents the "
          "relevant priority of the affected managed elements with "
          "respect to each other. \n"
          "An ordered array of ManagedElement instances is passed "
          "to this method, where each ManagedElement instance shall "
          "be already be associated with this Service instance via "
          "CIM_ServiceAffectsElement association. If one of the "
          "ManagedElements is not associated to the Service through "
          "CIM_ServiceAffectsElement association, the "
          "implementation shall return a value of 2 (\"Error "
          "Occured\"). \n"
          "Upon successful execution of this method, if the "
          "AssignedSequence parameter is NULL, the value of the "
          "AssignedSequence property on each instance of "
          "CIM_ServiceAffectsElement shall be updated such that the "
          "values of AssignedSequence properties shall be "
          "monotonically increasing in correlation with the "
          "position of the referenced ManagedElement instance in "
          "the ManagedElements input parameter. That is, the first "
          "position in the array shall have the lowest value for "
          "AssignedSequence. The second position shall have the "
          "second lowest value, and so on. Upon successful "
          "execution, if the AssignedSequence parameter is not "
          "NULL, the value of the AssignedSequence property of each "
          "instance of CIM_ServiceAffectsElement referencing the "
          "ManagedElement instance in the ManagedElements array "
          "shall be assigned the value of the corresponding index "
          "of the AssignedSequence parameter array. For "
          "ManagedElements instances which are associated with the "
          "Service instance via CIM_ServiceAffectsElement and are "
          "not present in the ManagedElements parameter array, the "
          "AssignedSequence property on the CIM_ServiceAffects "
          "association shall be assigned a value of 0." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 ChangeAffectedElementsAssignedSequence(
         [Required, IN, Description ( 
             "An array of ManagedElements." )]
      CIM_ManagedElement REF ManagedElements[], 
         [Required, IN, Description ( 
             "An array of integers representing AssignedSequence "
             "for the ManagedElement in the corresponding index "
             "of the ManagedElements parameter." )]
      uint16 AssignedSequence[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.37.0" ), 
    UMLPackagePath ( "CIM::System::FileServices" ), 
    Description ( 
       "Provides configuration support for exporting elements "
       "(\'files\') of a FileSystem. FileExportService(s) are hosted "
       "by a ComputerSystem that exports the files (these would be the "
       "Filers in a NAS Head). These shared elements (FileShares) are "
       "accessed through ProtocolEndpoint(s) hosted by the Filer that "
       "support the specified file-sharing protocol. FileShares are "
       "associated with the Service via ServiceAffectsElement and with "
       "the ProtocolEndpoint(s) via SAPAvailableForElement." )]
class CIM_FileExportService : CIM_Service {


      [Description ( 
          "Start a Job to create a FileShare from an element of a "
          "FileSystem or an imported FileShare. Makes the element "
          "available as a FileShare and returns it as the parameter "
          "TheShare of type CIM_FileShare. \n"
          "If 0 is returned, the method completed successfully and "
          "no ConcreteJob instance was required. If 0x1000 is "
          "returned, a ConcreteJob has been started to create the "
          "FileShare. The Job\'s reference will be returned in the "
          "output parameter Job. If the Job succeeds, the FileShare "
          "will be created and configured and ready to be exported. "
          "If the FileShare has been configured to be exported at a "
          "later time, its \'EnabledState\' attribute will not be "
          "set to \"Enabled\", until exported. The FileShare will "
          "have a HostedShare association to the host "
          "ComputerSystem. \n"
          "This method MUST return a CIM_Error representing that a "
          "single named property of a setting (or other) parameter "
          "(either reference or embedded object) has an invalid "
          "value or that an invalid combination of named properties "
          "of a setting (or other) parameter (either reference or "
          "embedded object) has been requested. \n"
          "The reference parameter Root indicates the FileSystem or "
          "FileShare whose element is being exported, either "
          "directly, or indirectly by specifying a Directory "
          "element that is associated via MountedElement to the "
          "FileSystem or FileShare. \n"
          "The string parameter SharedElementPath indicates the "
          "shared element within the file hierarchy by a path "
          "relative to the Root. If the Root is a FileSystem, this "
          "path begins at the root directory of the FileSystem; if "
          "the Root is a FileShare, this path begins at the "
          "directory associated to the FileShare via "
          "MountedElement; if the Root is a Directory, this path "
          "begins at that Directory. This is a string because "
          "multiple paths could lead to the same element but the "
          "access rights or other privileges could be specific to "
          "the path. \n"
          "Goal is a CIM_ExportedFileShareSetting element encoded "
          "as a string-valued EmbeddedInstance parameter; this "
          "allows the client to specify the properties desired for "
          "the share. \n"
          "If the method is successful, it will return a "
          "CIM_FileShare in the OUT parameter TheShare. The "
          "settings on the FileShare will be specified by the "
          "ExportedFileShareSetting element associated with the "
          "TheShare element via CIM_ElementSettingData. This "
          "ExportedFileShareSetting will also be associated via "
          "SettingGeneratedByCapabilities to the "
          "ExportedFileShareCapabilities element that was used for "
          "creating the FileShare. The FileShare will also be "
          "associated to the ComputerSystem via HostedShare, to the "
          "FileExportService via ServiceAffectsElement, and to one "
          "or more ServiceAccessPoints via SAPAvailableForElement." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "..", "0x1000", "0x1001..0x7FFF", "0x8000.." }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "FileExportService Not Accessible", 
          "Root is not accessible", 
          "Base Directory element of Root is Not Accessible", 
          "Path does not specify a shareable element", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateExportedShare(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, OUT, Description ( 
             "A reference indicating an element whose "
             "sub-element is being exported. The class that Root "
             "references must be a FileSystem, a FileShare that "
             "has a MountedElement association (or a derived "
             "class of MountedElement) to a LogicalFile (or "
             "Directory), or a LogicalFile (or a derived class "
             "such as Directory) that has a MountedElement "
             "association to a FileShare or FileSystem. \n"
             "If Root is NULL, it indicates the root of the "
             "FileExportService host\'s default local "
             "FileSystem, that is used as the default local name "
             "space." )]
      CIM_LogicalElement REF Root, 
         [IN, Description ( 
             "A string representing a path to the shared element "
             "from the Directory indicated by Root. \n"
             "Multiple paths could lead to the same element but "
             "the access rights or other privileges could be "
             "specific to the path. The client must specify the "
             "path. \n"
             "If SharedElementPath is NULL or the empty string, "
             "it indicates the \"root\" LogicalElement contained "
             "by Root." )]
      string SharedElementPath, 
         [IN, Description ( 
             "The client-specified requirements for how the "
             "specified FileShare element is to be shared or "
             "exported by the FileExportService. This is an "
             "element of the CIM_ExportedFileShareSetting class, "
             "or a derived class, encoded as a string-valued "
             "embedded object parameter. If NULL or the empty "
             "string, the default configuration will be "
             "specified by the FileExportService." ), 
          EmbeddedInstance ( "CIM_ExportedFileShareSetting" )]
      string Goal, 
         [OUT, Description ( 
             "This specifies the FileShare element (or its "
             "derived class) that is created by the method, if "
             "successful." )]
      CIM_FileShare REF TheShare, 
         [IN, Description ( 
             "A reference to a concrete derived class of "
             "CIM_Identity that indicates the user id to use for "
             "default access to this share. A NULL value "
             "indicates that no user id is specified. The "
             "provider is expected to surface this access using "
             "the privilege model." )]
      CIM_Identity REF DefaultUserId, 
         [IN, Description ( 
             "An array of strings that specify the hosts that "
             "have root access to this Share, if the "
             "CIM_ExportedFileShareSetting.RootAccess property "
             "is set to \'Allow Root Access\'. Each entry "
             "specifies a host by a vendor-specific host-id, "
             "prefixed with \'+\' or \'-\' to indicate that "
             "access is either Granted or Denied. The name of "
             "the host is its Durable Name, which is expected to "
             "be a fully-qualified-domain-name or its IP "
             "Address. If one of the entries is \'+*\', root "
             "access will be allowed from all hosts. If one of "
             "the entries is \'-*\', root access will be denied "
             "to all hosts, effectively overriding the value of "
             "the property "
             "CIM_ExportedFileShareSetting.RootAccess. The "
             "provider is expected to surface this access using "
             "the privilege model. \n"
             "This property needs to be a string because the "
             "remote host may not be known to the provider and "
             "therefore a reference to the host may not exist." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ExportedFileShareSetting.RootAccess" }]
      string RootAccessHosts[], 
         [IN, Description ( 
             "An array of strings that specify the "
             "ServiceAccessPoints that can connect to this "
             "Share, if the "
             "CIM_ExportedFileShareSettings.AccessPoints "
             "property is set to \'Named Ports\'. Each entry "
             "specifies one or more access points by its Name, "
             "unique within the System hosting the FileShare. "
             "The ids may be prefixed with \'+\' or \'-\'to "
             "indicate that access is to be granted or denied. \n"
             "If one of the entries is \'+*\', all access points "
             "supported by the service will be supported. If one "
             "of the entries is \'-*\', all access points will "
             "be denied access, effectively overriding the value "
             "of the property "
             "CIM_ExportedFileShareSetting.AccessPoints. The "
             "provider is expected to surface these access "
             "rights (whether granted or denied) using the "
             "privilege model. Any AccessPoints granted access "
             "via this parameter will also be associated to this "
             "share with CIM_SAPAvailableForElement. If the "
             "AccessPoint is not already enabled it will appear "
             "in a disabled state. \n"
             "This property needs to be a string because the "
             "access point may not be known to the provider and "
             "therefore a reference to the ServiceAccessPoint "
             "may not exist." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ExportedFileShareSetting.AccessPoints" }]
      string AccessPointPorts[]);

      [Description ( 
          "Start a Job to modify an Exported FileShare. \n"
          "If 0 is returned, the method completed successfully and "
          "no ConcreteJob instance was required. If 0x1000 is "
          "returned, a ConcreteJob has been started to modify the "
          "FileShare. The Job\'s reference will be returned in the "
          "output parameter Job. \n"
          "If the Job succeeds, the FileShare will be modified and "
          "re-configured and ready to be exported. If the FileShare "
          "has been configured to be exported at a later time, its "
          "\'EnabledState\' attribute will not be set to \"Enabled\", "
          "until exported. A reference to the FileShare will be "
          "returned in TheShare. The FileShare will have a "
          "HostedShare association to the host ComputerSystem, as "
          "before. If the parameters are, invalid, this method MUST "
          "return a CIM_Error representing that a single named "
          "property of a setting (or other) parameter (either "
          "reference or embedded object) has an invalid value or "
          "that an invalid combination of named properties of a "
          "setting (or other) parameter (either reference or "
          "embedded object) has been requested. \n"
          "This method cannot be used to change the element that "
          "has been exported, but a provider may support changing "
          "the pathname used to access it by re-specifying Root "
          "and/or SubElementPath. The reference parameter Root "
          "indicates the FileSystem or FileShare whose element is "
          "being exported, either directly, or indirectly by "
          "specifying a Directory element that is associated via "
          "MountedElement to the FileSystem or FileShare. The "
          "FileSystem or FileShare so indicated cannot be changed "
          "by this method. \n"
          "The parameter SharedElementPath indicates the shared "
          "element within the file hierarchy by a path relative to "
          "the Root. If the Root is a FileSystem, this path begins "
          "at the root directory of the FileSystem; if the Root is "
          "a FileShare, this path begins at the directory "
          "associated to the FileShare via MountedElement; if the "
          "Root is a Directory, this path begins at that Directory. "
          "If this path is modified, it must still indicate the "
          "same terminal element. \n"
          "Goal is a CIM_ExportedFileShareSetting element encoded "
          "as a string-valued embedded object parameter; this "
          "allows the client to specify the properties desired for "
          "the share. \n"
          "If the method is successful, it will return a reference "
          "to the same CIM_FileShare in the INOUT parameter "
          "TheShare. The settings for the FileShare and the "
          "ServiceAccessPoint associations may change, but the "
          "HostedShare and ServiceAffectsElement associations to "
          "the share must not be changed by this method. \n"
          "The input TheShare must not be NULL." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "0x1000", "0x1001..0x7FFF", "0x8000.." }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "FileExportService Not Accessible", 
          "Root is not accessible", 
          "Base Directory element of Root is Not Accessible", 
          "Path does not specify a shareable element", 
          "Share in use and cannot be Modified, Failed", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ModifyExportedShare(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "A reference indicating an element whose "
             "sub-element is being exported. The class that Root "
             "references must be a FileSystem, a FileShare that "
             "has a MountedElement association (or a derived "
             "class of MountedElement) to a Directory, or a "
             "Directory that has a MountedElement association to "
             "a FileShare or FileSystem. If the FileShare being "
             "modified is currently exported or imported, this "
             "parameter should indicate the same Root FileSystem "
             "or FileShare element. \n"
             "If Root is NULL, it indicates no change to the "
             "current root." )]
      CIM_LogicalElement REF Root, 
         [IN, Description ( 
             "A string representing a path to the shared element "
             "from the Directory element indicated by Root. If "
             "the FileShare being modified is currently exported "
             "or imported, this parameter should specify the "
             "same shared element, even if via a different path. \n"
             "Multiple paths could lead to the same element but "
             "the access rights or other privileges could be "
             "specific to the path. The client must specify the "
             "path during creation. \n"
             "If SharedElementPath is NULL, it indicates no "
             "change to the current path. If SharedElementPath "
             "is the empty string, it indicates the element "
             "indicated by Root." )]
      string SharedElementPath, 
         [IN, Description ( 
             "The client-specified requirements for how the "
             "export settings for the specified FileShare "
             "element are to be modifed by the "
             "FileExportService. If the FileShare is currently "
             "imported and not exported this will set up the "
             "necessary SharedElement, SharedElementRoot, "
             "HostedShare, and other associations. Goal is an "
             "element of the CIM_ExportedFileShareSetting class, "
             "or a derived class, encoded as a string-valued "
             "embedded object parameter. If NULL or the empty "
             "string, the existing configuration must include an "
             "ExportedFileShareSetting which will not be "
             "changed. Any differences in property values will "
             "be merged by the FileExportService." ), 
          EmbeddedInstance ( "CIM_ExportedFileShareSetting" )]
      string Goal, 
         [IN, Description ( 
             "TheShare indicates the FileShare that is to be "
             "modified. This can be an existing exported "
             "FileShare or an existing imported FileShare." )]
      CIM_FileShare REF TheShare, 
         [IN, Description ( 
             "An enumerated integer that specifies the action "
             "that the provider should take if the FileShare is "
             "still in use when this request is made. The "
             "WaitTime parameter indicates the \'specified time\' "
             "used for this function. \n"
             "This option is only relevant if the FileShare must "
             "be made unavailable while the request is being "
             "executed." ), 
          ValueMap { "2", "3", "4", "..", "0x1000..0xFFFF" }, 
          Values { "Do Not Execute Request", 
             "Wait for specified time, then Execute Request Immediately", 
             "Attempt Quiescence for specified time, then Execute Request Immediately", 
             "DMTF Reserved", "Vendor Defined" }]
      uint16 InUseOptions, 
         [IN, Description ( 
             "An integer that indicates the time (in seconds) "
             "that the provider must wait before executing this "
             "request if it cannot be done while the FileShare "
             "is in use. If WaitTime is not zero, the method "
             "will create a job, if supported by the provider, "
             "and return immediately. If the provider does not "
             "support asynchronous jobs, there is a possibility "
             "that the client could time-out before the job is "
             "completed. \n"
             "The combination of InUseOptions = \'4\' and "
             "WaitTime =\'0\' (the default) is interpreted as "
             "\'Wait (forever) until Quiescence, then Execute "
             "Request\' and will be performed asynchronously if "
             "possible." ), 
          Units ( "seconds" ), 
          PUnit ( "second" )]
      uint32 WaitTime, 
         [IN, Description ( 
             "A reference to a concrete derived class of "
             "CIM_Identity that indicates the user id to use for "
             "default access to this share. A NULL value "
             "indicates that any existing user id is not "
             "changed. The provider is expected to surface this "
             "access using the privilege model. This method does "
             "not support disabling the currently specified "
             "default user id, which must be done using the "
             "privilege model." )]
      CIM_Identity REF DefaultUserId, 
         [IN, Description ( 
             "An array of strings that specify additional hosts "
             "that have root access to this Share, if the "
             "CIM_ExportedFileShareSetting.RootAccess property "
             "is set to \'Allow Root Access\'. Each entry "
             "specifies a host by a vendor-specific host-id, "
             "prefixed with \'+\' or \'-\' to indicate that "
             "access is either Granted or Denied. The name of "
             "the host is its Durable Name, which is expected to "
             "be a fully-qualified-domain-name or its IP "
             "Address. If one of the entries is \'+*\', root "
             "access will be allowed from all hosts. If one of "
             "the entries is \'-*\', root access will be denied "
             "to all hosts, effectively overriding the value of "
             "the property "
             "CIM_ExportedFileShareSetting.RootAccess. If this "
             "is a null entry, the currently configured set of "
             "hosts will not be changed. If this is an empty "
             "array, the currently configured set of hosts will "
             "be cleared. The provider is expected to surface "
             "this access using the privilege model. \n"
             "This property needs to be a string because the "
             "remote host may not be known to the provider and "
             "therefore a REF to the host may not exist." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ExportedFileShareSetting.RootAccess" }]
      string RootAccessHosts[], 
         [IN, Description ( 
             "An array of strings that specify additional "
             "ServiceAccessPoints that can connect to this "
             "Share, if the "
             "CIM_ExportedFileShareSettings.AccessPoints "
             "property is set to \'Named Ports\'. Each entry "
             "specifies one or more access points by its Name, "
             "unique within the System hosting the FileShare. "
             "The ids may be prefixed with \'+\' or \'-\'to "
             "indicate that access is to be granted or denied. \n"
             "If one of the entries is \'+*\', all access points "
             "supported by the service will be supported. If one "
             "of the entries is \'-*\', all access points will "
             "be denied access, effectively overriding the value "
             "of the property "
             "CIM_ExportedFileShareSetting.AccessPoints. If this "
             "is a null entry, the currently configured set of "
             "access points will not be changed. If this is an "
             "empty array, the currently configured set of "
             "access points will be cleared. The provider is "
             "expected to surface these access rights (whether "
             "granted or denied) using the privilege model. Any "
             "AccessPoints granted access via this parameter "
             "will also be associated to this share with "
             "CIM_SAPAvailableForElement. If the AccessPoint is "
             "not already enabled it will appear in a disabled "
             "state. \n"
             "This property needs to be a string because the "
             "access point may not be known to the provider and "
             "therefore a REF to the ServiceAccessPoint may not "
             "exist." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ExportedFileShareSetting.AccessPoints" }]
      string AccessPointPorts[]);

      [Description ( 
          "Start a Job to release an exported Share. \n"
          "If 0 is returned, the method completed successfully and "
          "no ConcreteJob instance was required. If 0x1000 is "
          "returned, a ConcreteJob will be started to release the "
          "Share. The Job\'s reference will be returned in the OUT "
          "parameter Job. \n"
          "If the method is successful, the Share element will not "
          "be surfaced for export and the shared element will not "
          "be exported anymore through this Share. \n"
          "If InUseOptions are specified, this method will succeed "
          "only if no more clients are accessing the share." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "10", "..", 
          "0x1000", "0x1001..0x7FFF", "0x8000.." }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "Share in use, Failed", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ReleaseExportedShare(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( "The imported Share to be released." )]
      CIM_Share REF TheShare, 
         [IN, Description ( 
             "An enumerated integer that specifies the action "
             "that the provider should take if the FileShare is "
             "still in use when this request is made. The "
             "WaitTime parameter indicates the \'specified time\' "
             "used for this function. \n"
             "This option is only relevant if the FileShare must "
             "be made unavailable while the request is being "
             "executed." ), 
          ValueMap { "2", "3", "4", "..", "0x1000..0xFFFF" }, 
          Values { "Do Not Execute Request", 
             "Wait for specified time, then Release Immediately", 
             "Attempt Quiescence for specified time, then Release Immediately", 
             "DMTF Reserved", "Vendor Defined" }]
      uint16 InUseOptions, 
         [IN, Description ( 
             "An integer that indicates the time (in seconds) "
             "that the provider must wait before releasing this "
             "FileShare. If WaitTime is not zero, the method "
             "will create a job, if supported by the provider, "
             "and return immediately. If the provider does not "
             "support asynchronous jobs, there is a possibility "
             "that the client could time-out before the job is "
             "completed. \n"
             "The combination of InUseOptions = \'4\' and "
             "WaitTime =\'0\' (the default) is interpreted as "
             "\'Wait (forever) until Quiescence, then Release\' "
             "and will be performed asynchronously if possible." ), 
          Units ( "seconds" ), 
          PUnit ( "second" )]
      uint32 WaitTime);

      [Description ( 
          "AssignPrivilegeToExportedShaare will assign all of the "
          "supplied activities to the specified Identities." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", ".." }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Activities Not Supported", 
          "Identity Not Found", "File Share Not Found", 
          "DMTF Reserved" }]
   uint32 AssignPrivilegeToExportedShare(
         [Required, Description ( 
             "The list of Identities to assign privilege to share."
              )]
      CIM_Identity REF Identities[], 
         [Required, Description ( 
             "The Activities to assign to the share. The "
             "Activities are defined in the "
             "CIM_AssociatedPrivilege.Activities property." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "14", "15", "16", "17", 
             "18", "19", "20", "21", "22", "23", "24", "25", 
             "26", ".." }, 
          Values { "Create", "Delete", "Detect", "Read", "Write", 
             "Execute", "Deny Create", "Deny Delete", 
             "Deny Detect", "Deny Read", "Deny Write", 
             "Deny Execute", 
             "Authorize to Grant/Deny Authorization", 
             "Authorize to Create", "Authorize to Delete", 
             "Authorize to Detect", "Authorize to Read", 
             "Authorize to Write", "Authorize to Execute", 
             "Authorize to Deny Create", 
             "Authorize to Deny Delete", 
             "Authorize to Deny Detect", 
             "Authorize to Deny Read", "Authorize to Deny Write", 
             "Authorize to Deny Execute", "DMTF Reserved" }, 
          ModelCorrespondence { 
             "CIM_AssociatedPrivilege.Activities" }]
      uint16 Activities[], 
         [Required, Description ( 
             "The FileShare to assing the privileges." )]
      CIM_FileShare REF FileShare);

};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_FileExportService : CIM_FileExportService
{


};

