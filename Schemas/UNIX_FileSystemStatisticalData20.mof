//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Abstract, Version ( "2.39.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";

      [Description ( "The end time for the rate data interval." )]
   datetime RateIntervalEndTime;

      [Experimental, Description ( 
          "The start time for the rate data interval. Rate "
          "indicates the number of data points per second - for "
          "example, number of read I/Os per second." )]
   datetime RateIntervalStartTime;


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.38.0" ), 
    UMLPackagePath ( "CIM::System::FileStatistics" ), 
    Description ( 
       "A subclass of StatisticalData which identifies individual "
       "statistics for an element of a system that provides filesystem "
       "support. This class defines the metrics that MAY be kept for "
       "managed elements of the system." )]
class CIM_FileSystemStatisticalData : CIM_StatisticalData {

      [Required, Description ( 
          "Defines the role that the element played for which this "
          "statistics record was collected. If the metered element "
          "is a system or a component of a system associated to a "
          "RegisteredProfile, then that profile may provide a more "
          "specialized definition and additional usage information "
          "for this property. \n"
          "Generally, the ElementTypes defined here have the "
          "following meaning in the context of this class: 1, "
          "\"Other\": An element type other than one explicitly "
          "declared herein. In this case, information describing "
          "this element should be provided in the "
          "OtherElementTypeDescription string property. 102, \"Local "
          "Filesystem\": Statistics for a local filesystem and "
          "collectively all of its files and directories. 103, "
          "\"Exported File Share\": Statistics for a file share "
          "that is exported to a network. 104, \"Exporting Port\": "
          "Statistics for a port through which a file share being "
          "exported can be accessed." ), 
       ValueMap { "1", "102", "103", "104", "105", "..", "0x8000.." }, 
       Values { "Other", "Local Filesystem", "Exported File Share", 
          "Exporting Port", "Session", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 ElementType;

      [Description ( 
          "A string describing the type of element when the "
          "ElementType property of this class (or any of its "
          "subclasses) is set to 1 (i.e., \"Other\"). This property "
          "should be set to NULL when the ElementType property is "
          "any value other than 1." ), 
       MaxLen ( 64 )]
   string OtherElementTypeDescription;

      [Description ( 
          "The cumulative count of file I/O operations for the "
          "object, including metadata I/O operations." ), 
       Counter]
   uint64 TotalIOs;

      [Description ( 
          "The cumulative count of bytes transferred for all of the "
          "file I/O operations as defined in the \"TotalIOs\" "
          "property." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 TotalBytesTransferred;

      [Description ( 
          "The cumulative count of file I/O operations that were "
          "directed to the object and that performed a transfer of "
          "data from the file contents." ), 
       Counter]
   uint64 ReadIOs;

      [Description ( 
          "The cumulative count of file I/O operations that were "
          "directed to the object and that performed a transfer of "
          "data to the file contents." ), 
       Counter]
   uint64 WriteIOs;

      [Description ( 
          "The cumulative count of file I/O operations that were "
          "directed to the object and that did not perform a "
          "transfer of data either to or from the file contents. "
          "This count excludes metadata I/O operations (both read "
          "and write)." ), 
       Counter]
   uint64 OtherIOs;

      [Description ( 
          "The cumulative count of file I/O operations that were "
          "directed to the object and that performed a read "
          "transfer of metadata." ), 
       Counter]
   uint64 MetadataReadIOs;

      [Description ( 
          "The cumulative count of file I/O operations that were "
          "directed to the object and that performed a write "
          "transfer of metadata." ), 
       Counter]
   uint64 MetadataWriteIOs;

      [Description ( 
          "The cumulative elapsed I/O operation time (number of "
          "ClockTickIntervals) for all I/O operations as defined in "
          "\"Total I/Os\". The I/O operation response time is added "
          "to this counter at the completion of each measured I/O "
          "operation using ClockTickInterval units. The "
          "TotalIOTimeCounter value can be divided by the total "
          "number of I/O operations (TotalIOs) to obtain an I/O "
          "operation average response time." ), 
       Counter]
   uint64 TotalIOTimeCounter;

      [Description ( 
          "The cumulative elapsed idle time using ClockTickInterval "
          "units. That is, the cumulative number of "
          "ClockTimeIntervals for all idle time within the object, "
          "with \"idle time\" being that time during which no I/O "
          "operations were being processed by the object." ), 
       Counter]
   uint64 TotalIdleTimeCounter;

      [Description ( 
          "The cumulative elapsed I/O operation time for all Read "
          "I/O operations (that is, the cumulative elapsed time for "
          "all Read I/O operations as defined by the \"ReadIOs\" "
          "property." ), 
       Counter]
   uint64 ReadIOTimeCounter;

      [Description ( 
          "The cumulative count of bytes read (that is, the "
          "cumulative count of bytes transferred by all Read I/O "
          "operations as defined by the \"ReadIOs\" property)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesRead;

      [Description ( 
          "The cumulative elapsed I/O operation time for all Write "
          "I/O operations (that is, the cumulative elapsed time for "
          "all Write I/O operations as defined by the \"WriteIOs\" "
          "property." ), 
       Counter]
   uint64 WriteIOTimeCounter;

      [Description ( 
          "The cumulative count of bytes written (that is, the "
          "cumulative count of bytes transferred by all Write I/O "
          "operations as defined by the \"WriteIOs\" property)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesWritten;

      [Description ( 
          "The cumulative count of metabytes read (that is, the "
          "cumulative count of bytes transferred by all Metadata "
          "read I/O operations as defined by the \"MetadataReadIOs\" "
          "property)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 MetadataBytesRead;

      [Description ( 
          "The cumulative count of metabytes written (that is, the "
          "cumulative count of bytes transferred by all Metadata "
          "write I/O operations as defined by the "
          "\"MetadataWriteIOs\" property)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 MetadataBytesWritten;

      [Description ( 
          "The percentage of total opens for which clients "
          "requested durability." ), 
       Counter]
   uint16 PercentDurableOpens;

      [Description ( 
          "The percentage of total opens for which clients "
          "requested resiliency." ), 
       Counter]
   uint16 PercentResilientOpens;

      [Description ( 
          "The percentage of total handles for which clients "
          "requested persistency." ), 
       Counter]
   uint16 PercentPersistentOpens;

      [Description ( 
          "The average number of seconds that elapse between the "
          "time at which a read request to this share is received "
          "and the time at which the SMB2 File Server sends the "
          "corresponding response." ), 
       Counter]
   uint16 AverageReadResponseTime;

      [Description ( 
          "The average number of seconds that elapse between the "
          "time at which a write request to this share is received "
          "and the time at which the SMB2 File Server sends the "
          "corresponding response." ), 
       Counter]
   uint16 AverageWriteResponseTime;

      [Description ( 
          "The average number of seconds that elapse between the "
          "time at which the SMB2 File Server receives a request "
          "for this share and the time at which the SMB2 File "
          "Server sends the corresponding response." ), 
       Counter]
   uint16 AverageRequestResponseTime;

      [Description ( 
          "The rate, in seconds, at which data is being read from this share."
           ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesReadPerSec;

      [Description ( 
          "The number of bytes that have been received for requests "
          "related to this share. This value includes application "
          "data as well as SMB2 protocol data (such as packet "
          "headers)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 TotalBytesReceived;

      [Description ( 
          "The rate at which bytes are being received for requests "
          "related to this share. This value includes application "
          "data as well as SMB2 protocol data (such as packet "
          "headers)." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesReceivedPerSec;

      [Description ( 
          "The number of bytes that have been sent by the SMB2 File "
          "Server related to this share to its clients since the "
          "server started. This value includes both data bytes and "
          "protocol bytes." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 TotalBytesSent;

      [Description ( 
          "The rate, in seconds, at which bytes are being sent from "
          "the SMB2 File Server related to this share to its "
          "clients. This value includes both data bytes and "
          "protocol bytes." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesSentPerSec;

      [Description ( 
          "The sum of bytes transferred/sec related to this share." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesTranferredPerSec;

      [Description ( 
          "The rate, in seconds, at which data is being written to "
          "this share." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 BytesWrittenPerSec;

      [Description ( 
          "The rate, in seconds, at which files are being opened "
          "for the SMB2 File Server\'s clients on this share." ), 
       Counter]
   uint64 FilesOpenedPerSec;

      [Description ( 
          "The number of files that have been opened by the SMB2 "
          "File Server on behalf of its clients on this share since "
          "the server started." ), 
       Counter]
   uint64 TotalOpenFileCount;

      [Description ( 
          "The number of requests related to this share that are "
          "waiting to be processed by the SMB2 File Server." ), 
       Counter]
   uint64 CurrentPendingRequests;

      [Description ( 
          "Read requests processed/sec related to this share." ), 
       Counter]
   uint64 ReadRequestsProcessedPerSec;

      [Description ( 
          "The number of requests that have been received for this share."
           ), 
       Counter]
   uint64 TotalRequestsReceived;

      [Description ( 
          "The rate at which requests are being received for this share."
           ), 
       Counter]
   uint64 RequestsReceivedPerSec;

      [Description ( 
          "The number of durable opens on this share that have been "
          "recovered after a temporary network disconnect since the "
          "SMB2 File Server started." ), 
       Counter]
   uint64 TotalDurableHandleReopenCount;

      [Description ( 
          "The number of durable opens on this share that could not "
          "be recovered after a temporary network disconnect since "
          "the SMB2 File Server Started." ), 
       Counter]
   uint64 TotalFailedDurableHandleReopenCount;

      [Description ( 
          "The number of resilient opens on this share that could "
          "not be recovered after a temporary network disconnect "
          "since the SMB2 File Server Started." ), 
       Counter]
   uint64 TotalFailedResilientHandleReopenCount;

      [Description ( 
          "The number of file handles that are currently open in this share."
           ), 
       Counter]
   uint64 CurrentOpenFileCount;

      [Description ( 
          "The number of resilient opens on this share that have "
          "been recovered after a temporary network disconnect "
          "since the SMB2 File Server started." ), 
       Counter]
   uint64 TotalResilientHandleReopenCount;

      [Description ( 
          "The number of persistent opens on this share that have "
          "been recovered after a temporary network disconnect "
          "since the SMB2 File Server started." ), 
       Counter]
   uint64 TotalPersistentHandleReopenCount;

      [Description ( 
          "The number of persistent opens on this share that could "
          "not be recovered after a temporary network disconnect "
          "since the SMB2 File Server Started." ), 
       Counter]
   uint64 TotalFailedPersistentHandleReopenCount;

      [Description ( "The number of tree connects to this share." ), 
       Counter]
   uint64 TreeConnectCount;

      [Description ( 
          "Write requests processed/sec related to this share." ), 
       Counter]
   uint64 WriteRequestsProcessedPerSec;

      [Description ( 
          "The total number of metadata requests received related "
          "to this share." ), 
       Counter]
   uint64 TotalMetadataRequestsReceived;

      [Description ( 
          "The rate, in seconds, at which metadata requests are "
          "being sent to this share." ), 
       Counter]
   uint64 MetadataRequestsReceivedPerSec;

      [Description ( 
          "The average number of seconds that elapse between the "
          "time at which a read or write request to this share is "
          "received and the time at which the SMB2 File Server "
          "processes the request." ), 
       Counter]
   uint64 AverageTimePerDataRequest;

      [Description ( 
          "The average number of bytes per read or write request." ), 
       Counter]
   uint64 AverageBytesPerDataRequest;

      [Description ( "The average number of bytes per read request." ), 
       Counter]
   uint64 AverageBytesPerReadRequest;

      [Description ( 
          "The average number of bytes per write request." ), 
       Counter]
   uint64 AverageBytesPerWriteRequest;

      [Description ( 
          "The average number of read requests that were queued for "
          "this share." ), 
       Counter]
   uint64 AverageReadQueueLength;

      [Description ( 
          "The average number of write requests that were queued "
          "for this share." ), 
       Counter]
   uint64 AverageWriteQueueLength;

      [Description ( 
          "The average number of read and write requests that were "
          "queued for this share." ), 
       Counter]
   uint64 AverageDataQueueLength;

      [Description ( 
          "The rate, in seconds, at which data is being written to "
          "or read from this share." ), 
       Counter]
   uint64 DataBytesPerSec;

      [Description ( 
          "The rate, in seconds, at which read or write requests "
          "are received for this share." ), 
       Counter]
   uint64 DataRequestsPerSec;

      [Description ( 
          "The current number of read or write requests outstanding "
          "on this share." ), 
       Counter]
   uint64 CurrentDataQueueLength;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_FileSystemStatisticalData : CIM_FileSystemStatisticalData
{


};

