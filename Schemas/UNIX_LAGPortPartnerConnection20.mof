//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_SAPSAPDependency is an association between one "
       "ServiceAccessPoint and another ServiceAccessPoint that "
       "indicates that the latter is required for the former to "
       "utilize or connect with its Service. For example, to print to "
       "a network printer, local Print Access Points must utilize "
       "underlying network-related SAPs, or ProtocolEndpoints, to send "
       "the print request." )]
class CIM_SAPSAPDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The required ServiceAccessPoint." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ServiceAccessPoint that is dependent on an underlying SAP."
           )]
   CIM_ServiceAccessPoint REF Dependent;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "This association defines a connection that is currently "
       "communicating, or is configured to communicate, between two "
       "ServiceAccessPoints. It is used when the connection is not "
       "treated as a ManagedElement itself (that is, with Status, "
       "statistics, and so on), but its existence is known. The SAPs "
       "that are connected are typically at the same networking or "
       "application layer." )]
class CIM_ActiveConnection : CIM_SAPSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "A ServiceAccessPoint that is configured to communicate "
          "or is actively communicating with the Dependent SAP. In "
          "a unidirectional connection, this SAP is the one that is "
          "transmitting." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A second ServiceAccessPoint that is configured to "
          "communicate or is actively communicating with the "
          "Antecedent SAP. In a unidirectional connection, this SAP "
          "is the one that is receiving the communication." )]
   CIM_ServiceAccessPoint REF Dependent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this element is deprecated because it "
          "is incorrectly placed on the association. Unicast, "
          "broadcast, or other traffic types are not a function of "
          "the connection between the referenced endpoints, but "
          "rather are a function of the addressing, protocol and "
          "basic functionality of the endpoints. \n"
          "Deprecated description: The type of traffic that is "
          "carried over this connection." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Unicast", "Broadcast", 
          "Multicast", "Anycast" }, 
       ModelCorrespondence { 
          "CIM_ActiveConnection.OtherTrafficDescription" }]
   uint16 TrafficType;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this element is deprecated because it "
          "is incorrectly placed on the association. Unicast, "
          "broadcast, or other traffic types are not a function of "
          "the connection between the referenced endpoints, but "
          "rather are a function of the addressing, protocol and "
          "basic functionality of the endpoints. \n"
          "Deprecated description: A string that describes the type "
          "of traffic that is being carried over this instance when "
          "its Type property is set, for example, to 1 (Other)." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_ActiveConnection.TrafficType" }]
   string OtherTrafficDescription;

      [Description ( 
          "TRUE means that this connection is unidirectional; FALSE "
          "means that this connection is bidirectional. When the "
          "connection is unidirectional, the \"speaker\" should be "
          "defined as the Antecedent reference. In a bidirectional "
          "connection, the selection of which AccessPoint is the "
          "Antecedent or Dependent is immaterial." )]
   boolean IsUnidirectional;


};



// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LAGPortPartnerConnection
// ==================================================================
   [Association, Experimental, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Network::8023LAG" ), 
    Description ( 
       "LAGPortPartnerConnection contains the configuration "
       "information for an instance of a LAGPort8023ad\'s partner. The "
       "partner is defined as a RemoteServiceAccessPoint and it "
       "represents the actor\'s view of the connection. If there is no "
       "known partner, then this association will not be defined for "
       "an instance of LAGPort8023ad." )]
class CIM_LAGPortPartnerConnection : CIM_ActiveConnection {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The 802.3ad port on the local system." )]
   CIM_LAGPort8023ad REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The remote entity/partner of the referenced LAGPort8023ad."
           )]
   CIM_RemoteServiceAccessPoint REF Dependent;

      [Description ( 
          "A 6-octet MACAddress value representing the current "
          "value of the Aggregation Port\'s protocol Partner\'s "
          "System ID. For more information, refer to the IEEE "
          "802.3ad document, Subclause 30.7.2.1.9. Note that the "
          "MAC address is formatted as twelve hexadecimal digits "
          "(e.g., \"010203040506\"), with each pair representing "
          "one of the six octets of the MAC address in \"canonical\" "
          "bit order according to RFC 2469." ), 
       MaxLen ( 12 ), 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperSystemID" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerSettings.PortPartnerAdminSystemID" }]
   string PortPartnerOperSystemID;

      [Description ( 
          "A 2-octet value indicating the operational value of "
          "priority associated with the Partner\'s System ID. For "
          "more information, refer to the IEEE 802.3ad document, "
          "Subclause 30.7.2.1.7." ), 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperSystemPriority" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerSettings.PortPartnerAdminSystemPriority" }]
   uint16 PortPartnerOperSystemPriority;

      [Description ( 
          "The current operational value of the 16-bit Keyfor the "
          "protocol Partner. For more information, refer to the "
          "IEEE 802.3ad document, Subclause 30.7.2.1.11." ), 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperKey" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerSettings.PortPartnerAdminKey" }]
   uint16 PortPartnerOperKey;

      [Description ( 
          "The operational port number assigned to the Aggregation "
          "Port\'s protocol Partner. For more information, refer to "
          "the IEEE 802.3ad document, Subclause 30.7.2.1.17." ), 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperPort" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerSettings.PortPartnerAdminPort" }]
   uint16 PortPartnerOperPort;

      [Description ( 
          "The priority value assigned to the AggregationPort\'s "
          "protocol Partner. For more information, refer to the "
          "IEEE 802.3ad document, Subclause 30.7.2.1.19." ), 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperPortPriority" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerSettings.PortPartnerAdminPortPriority" }]
   uint16 PortPartnerOperPortPriority;

      [Write, Description ( 
          "An enumerated array allowing administrator control of "
          "the Actor_State for the protocol Partner. For more "
          "information, refer to the IEEE 802.3ad document, "
          "Subclause 30.7.2.1.22." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown/Undefined", "LACP_Activity", 
          "LACP_Timeout", "Aggregation", "Synchronization", 
          "Collecting", "Distributing", "Defaulted", "Expired" }, 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerAdminState" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerConnection.PortPartnerOperState" }]
   uint16 PortPartnerAdminState;

      [Description ( 
          "An enumerated array defining the Actor_State for the "
          "protocol Partner, from the most recently received LACPDU "
          "transmitted by the partner. For more information, refer "
          "to the IEEE 802.3ad document, Subclause 30.7.2.1.23." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown/Undefined", "LACP_Activity", 
          "LACP_Timeout", "Aggregation", "Synchronization", 
          "Collecting", "Distributing", "Defaulted", "Expired" }, 
       MappingStrings { 
          "MIB.IEEE|IEEE8023-LAG-MIB.dot3adAggPortPartnerOperState" }, 
       ModelCorrespondence { 
          "CIM_LAGPortPartnerConnection.PortPartnerAdminState" }]
   uint16 PortPartnerOperState;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_LAGPortPartnerConnection : CIM_LAGPortPartnerConnection
{


};

