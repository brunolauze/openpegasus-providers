//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2011 DMTF.  All rights reserved.
   [Association, Experimental, Abstract, Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "AbstractElementAllocatedFromPool associates an instance of "
       "CIM_ManagedElement representing an allocated Resource with the "
       "CIM_ManagedElement from which it was allocated" )]
class CIM_AbstractElementAllocatedFromPool : CIM_Dependency {

      [Key, Override ( "Antecedent" ), 
       Description ( 
          "A reference to the ManagedElement that represents a pool "
          "from which an element is allocated." )]
   CIM_ManagedElement REF Antecedent;

      [Key, Override ( "Dependent" ), 
       Description ( 
          "A reference to the element that is alloocated from the "
          "antecedent pool." )]
   CIM_ManagedElement REF Dependent;


};



// Copyright (c) 2011 DMTF.  All rights reserved.
   [Association, Experimental, Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::DEVICE::Views" ), 
    Description ( 
       "The CIM_AllocatedFromStoragePoolView instance is a view that "
       "is derived from the CIM_AllocatedFromStoragePool association "
       "between a VolumeView or StoragePoolView and the parent "
       "StoragePool from which the VolumeView or StoragePoolView is "
       "allocated." )]
class CIM_AllocatedFromStoragePoolViewView : CIM_AbstractElementAllocatedFromPool {

      [Key, Override ( "Antecedent" ), 
       Description ( 
          "The parent StoragePoolView from which the CIM_VolumeView "
          "or child StoragePoolView is allocated." )]
   CIM_StoragePoolView REF Antecedent;

      [Key, Override ( "Dependent" ), 
       Description ( 
          "The VolumeView or StoragePoolView instance that is "
          "allocated from the parent StoragePoolView." )]
   CIM_View REF Dependent;

      [Description ( 
          "The space consumed from the parent StoragePool by the "
          "VolumeView or StoragePoolView. This value is the same as "
          "the AllocatedFromStoragePool.SpaceConsumed value for the "
          "base CIM_StorageVolume or CIM_StoragePool on the parent "
          "StoragePool." ), 
       ModelCorrespondence { 
          "CIM_AllocatedFromStoragePool.SpaceConsumed" }]
   uint64 AFSPSpaceConsumed;


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_AllocatedFromStoragePoolViewView : CIM_AllocatedFromStoragePoolViewView
{


};

