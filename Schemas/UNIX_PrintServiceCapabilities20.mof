//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1). This cardinality "
       "mandates the instantiation of the ElementCapabilities "
       "association for the referenced instance of Capabilities. "
       "ElementCapabilities describes the existence requirements for "
       "the referenced instance of ManagedElement. Specifically, the "
       "ManagedElement MUST exist and provide the context for the "
       "Capabilities. Note that Capabilities do not indicate what IS "
       "configured or operational, but what CAN or CANNOT exist, be "
       "defined or be used. Note that it is possible to describe both "
       "supported and excluded abilities and functions (both "
       "capabilities and limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


      [Experimental, Description ( 
          "Method to create a set of supported SettingData "
          "elements, from two sets of SettingData elements, "
          "provided by the caller. \n"
          "CreateGoal should be used when the SettingData instances "
          "that represents the goal will not persist beyond the "
          "execution of the client and where those instances are "
          "not intended to be shared with other, non-cooperating "
          "clients. \n"
          "Both TemplateGoalSettings and SupportedGoalSettings are "
          "represented as strings containing EmbeddedInstances of a "
          "CIM_SettingData subclass. These embedded instances do "
          "not exist in the infrastructure supporting this method "
          "but are maintained by the caller/client. \n"
          "This method should return CIM_Error(s) representing that "
          "a single named property of a setting (or other) "
          "parameter (either reference or embedded object) has an "
          "invalid value or that an invalid combination of named "
          "properties of a setting (or other) parameter (either "
          "reference or embedded object) has been requested. \n"
          "If the input TemplateGoalSettings is NULL or the empty "
          "string, this method returns a default SettingData "
          "element that is supported by this Capabilities element. \n"
          "If the TemplateGoalSettings specifies values that cannot "
          "be supported, this method shall return an appropriate "
          "CIM_Error and should return a best match for a "
          "SupportedGoalSettings. \n"
          "The client proposes a goal using the "
          "TemplateGoalSettings parameter and gets back Success if "
          "the TemplateGoalSettings is exactly supportable. It gets "
          "back \"Alternative Proposed\" if the output "
          "SupportedGoalSettings represents a supported "
          "alternative. This alternative should be a best match, as "
          "defined by the implementation. \n"
          "If the implementation is conformant to a "
          "RegisteredProfile, then that profile may specify the "
          "algorithms used to determine best match. A client may "
          "compare the returned value of each property against the "
          "requested value to determine if it is left unchanged, "
          "degraded or upgraded. \n"
          "\n"
          "Otherwise, if the TemplateGoalSettings is not applicable "
          "an \"Invalid Parameter\" error is returned. \n"
          "\n"
          "When a mutually acceptable SupportedGoalSettings has "
          "been achieved, the client may use the contained "
          "SettingData instances as input to methods for creating a "
          "new object ormodifying an existing object. Also the "
          "embedded SettingData instances returned in the "
          "SupportedGoalSettings may be instantiated via "
          "CreateInstance, either by a client or as a side-effect "
          "of the execution of an extrinsic method for which the "
          "returned SupportedGoalSettings is passed as an embedded "
          "instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Alternative Proposed", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 CreateGoalSettings(
         [IN, Description ( 
             "If provided, TemplateGoalSettings are elements of "
             "class CIM_SettingData, or a derived class, that is "
             "used as the template to be matched. . \n"
             "At most, one instance of each SettingData subclass "
             "may be supplied. \n"
             "All SettingData instances provided by this "
             "property are interpreted as a set, relative to "
             "this Capabilities instance. \n"
             "SettingData instances that are not relevant to "
             "this instance are ignored. \n"
             "If not provided, it shall be set to NULL. In that "
             "case, a SettingData instance representing the "
             "default settings of the associated ManagedElement "
             "is used." ), 
          EmbeddedInstance ( "CIM_SettingData" )]
      string TemplateGoalSettings[], 
         [IN, OUT, Description ( 
             "SupportedGoalSettings are elements of class "
             "CIM_SettingData, or a derived class. \n"
             "At most, one instance of each SettingData subclass "
             "may be supplied. \n"
             "All SettingData instances provided by this "
             "property are interpreted as a set, relative to "
             "this Capabilities instance. \n"
             "\n"
             "To enable a client to provide additional "
             "information towards achieving the "
             "TemplateGoalSettings, an input set of SettingData "
             "instances may be provided. If not provided, this "
             "property shall be set to NULL on input.. Note that "
             "when provided, what property values are changed, "
             "and how, is implementation dependent and may be "
             "the subject of other standards. \n"
             "If provided, the input SettingData instances must "
             "be ones that the implementation is able to support "
             "relative to the ManagedElement associated via "
             "ElementCapabilities. Typically, the input "
             "SettingData instances are created by a previous "
             "instantiation of CreateGoalSettings. \n"
             "If the input SupportedGoalSettings is not "
             "supported by the implementation, then an \"Invalid "
             "Parameter\" (5) error is returned by this call. In "
             "this case, a corresponding CIM_ERROR should also "
             "be returned. \n"
             "On output, this property is used to return the "
             "best supported match to the TemplateGoalSettings. \n"
             "If the output SupportedGoalSettings matches the "
             "input SupportedGoalSettings, then the "
             "implementation is unable to improve further "
             "towards meeting the TemplateGoalSettings." ), 
          EmbeddedInstance ( "CIM_SettingData" )]
      string SupportedGoalSettings[]);

};



// Copyright (c) 2011 DMTF.  All rights reserved.
   [Experimental, Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "A single instance of Capabilities for any PrintService which "
       "corresponds to xxx-supported attributes of an IPP Printer. \n"
       "See: Section 2.1 Printer Object in IPP/1.1 (RFC 2911). \n"
       "See: Section 4.2 Job Template Attributes in IPP/1.1. \n"
       "See: Section 4.4 Printer Description Attributes in IPP/1.1. \n"
       "Note: An instance of PrintServiceCapabilities shall be "
       "associated with exactly one instance of PrintService via an "
       "instance of the CIM_ElementCapabilities association." )]
class CIM_PrintServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "The supported charsets for human-readable text output "
          "from this instance of PrintService to network clients. \n"
          "Values shall conform to section 4.1.2 Charset Parameter "
          "in RFC 2046 and be contained in IANA Charset Registry, "
          "e.g., \'utf-8\' and \'us-ascii\'." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.18 charset-supported" }, 
       ModelCorrespondence { "CIM_PrintService.Charset" }]
   string Charset[];

      [Description ( 
          "Specifies whether color printing is supported for the "
          "associated PrintService." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.26 color-supported" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceCapabilities.PagesPerMinuteColor" }]
   boolean ColorSupported;

      [Description ( 
          "The supported compression for document data (but not "
          "operations themselves) for the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Additional vendor or site values may also be used. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'none\' means no compression is supported. \n"
          "Value \'deflate\' means RFC 1951 (ZIP) is supported. \n"
          "Value \'gzip\' means RFC 1952 (GNU zip) is supported. \n"
          "Value \'compress\' means RFC 1977 (UNIX) is supported." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.32 compression-supported" }]
   string Compression[];

      [Description ( 
          "The supported range of copies values for any PrintJob "
          "processed by the associated PrintService (X:Y), e.g., "
          "\'1:100\' or \'2:2\' (double copies only)." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.5 copies" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.Copies", 
          "CIM_PrintJob.Copies" }]
   string Copies;

      [Description ( 
          "The supported named finishings values for any PrintJob "
          "processed by the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'punch\' means drill hole(s) in each Job copy. \n"
          "Value \'staple\' means put staple(s) in each Job copy." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.6 finishings" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.Finishings", 
          "CIM_PrintJob.Finishings" }]
   string Finishings[];

      [Description ( 
          "The supported set of IPP protocol named operations for "
          "the associated PrintService (if any). \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'Print-Job\' means submit a new PrintJob. \n"
          "Value \'Cancel-Job\' means cancel an existing PrintJob." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.15 operations-supported" }, 
       ModelCorrespondence { 
          "CIM_AccountManagementCapabilities.OperationsSupported" }]
   string IPPOperations[];

      [Description ( 
          "The supported set of IPP protocol major/minor versions "
          "for the associated PrintService (if any). \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values currently defined include: \n"
          "Value \'1.0\' means IPP/1.0 (RFC 2566). \n"
          "Value \'1.1\' means IPP/1.1 (RFC 2911). \n"
          "Value \'2.0\' means IPP/2.0 (PWG 5100.12). \n"
          "Value \'2.1\' means IPP/2.1 (PWG 5100.12). \n"
          "Value \'2.2\' means IPP/2.2 (PWG 5100.12)." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.14 ipp-versions-supported" }, 
       ModelCorrespondence { "CIM_SoftwareElement.Version" }]
   string IPPVersions[];

      [Description ( 
          "The supported named job hold until values for any "
          "PrintJob processed by the associated PrintService. That "
          "is, the named time periods when the PrintJob may be "
          "scheduled. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Additional vendor or site values may also be used. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'night\' means local night (site-specific). \n"
          "Value \'weekend\' means local weekend (site-specific). \n"
          "Value \'no-hold\' means schedule PrintJob immediately." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.2 job-hold-until" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceSettings.JobHoldUntil", 
          "CIM_PrintJob.JobHoldUntil" }]
   string JobHoldUntil[];

      [Description ( 
          "The supported range of priority values for any PrintJob "
          "processed by the associated PrintService (X:Y), e.g., "
          "\'1:100\' or \'50:50\' (single medium priority only). \n"
          "Note: Weighted scale is *opposite* to Job.Priority. \n"
          "The value 1 indicates the lowest possible priority. \n"
          "The value 100 indicates the highest possible priority." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.1 job-priority" }, 
       ModelCorrespondence { "CIM_Job.Priority", 
          "CIM_PrintServiceSettings.JobPriority", 
          "CIM_PrintJob.JobPriority" }]
   string JobPriority;

      [Description ( 
          "The supported named start/end sheets for any PrintJob "
          "processed by the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Additional vendor or site values may also be used. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'none\' indicates no job start/end sheets. \n"
          "Value \'standard\' indicates one or more site-specific "
          "standard job sheets." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.3 job-sheets" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.JobSheets", 
          "CIM_PrintJob.RequiredJobSheets" }]
   string JobSheets[];

      [Description ( 
          "The supported maximum output impressions for any "
          "PrintJob processed by the associated PrintService." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.34 job-impressions-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.ImpressionsCompleted" }]
   uint32 MaxImpressions;

      [Description ( 
          "The supported maximum document data size for any "
          "PrintJob processed by the associated PrintService, in "
          "units of KBytes." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.33 job-k-octets-supported" }, 
       ModelCorrespondence { "CIM_PrintQueue.MaxJobSize", 
          "CIM_PrintJob.JobSize" }, 
       PUnit ( "byte * 10^3" )]
   uint32 MaxJobSize;

      [Description ( 
          "The supported maximum output sheets for any PrintJob "
          "processed by the associated PrintService." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.35 job-media-sheets-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.SheetsCompleted" }]
   uint32 MaxSheets;

      [Description ( 
          "The supported multiple document handling for any "
          "PrintJob processed by the associated PrintService. \n"
          "That is, the named policy for the handling of finishing, "
          "the placement of one or more input logical pages onto "
          "output impressions, and multiple copies in a PrintJob "
          "with two or more documents. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'single-document\' means apply finishing to "
          "multiple document sets (i.e., each copy of the "
          "PrintJob). \n"
          "Value \'single-document-new-sheet\' means the same "
          "behavior as \'single-document\' plus each document must "
          "start on a new sheet (i.e., a front side in duplex)." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.2.4 multiple-document-handling" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceCapabilities.MultipleDocumentJobs", 
          "CIM_PrintServiceSettings.MultipleDocumentHandling", 
          "CIM_PrintJob.MultipleDocumentHandling" }]
   string MultipleDocumentHandling[];

      [Description ( 
          "Specifies whether multiple documents in a single Job are "
          "supported for the associated PrintService (e.g., using "
          "IPP Send-Document operations)." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.16" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceCapabilities.MultipleDocumentHandling", 
          "CIM_PrintServiceSettings.MultipleDocumentHandling", 
          "CIM_PrintJob.MultipleDocumentHandling" }]
   boolean MultipleDocumentJobs;

      [Description ( 
          "The supported natural languages for human-readable text "
          "output from this instance of PrintService to network "
          "clients. \n"
          "Values shall conform to IETF Tags for Identifying "
          "Languages (RFC 5646) or successor and shall be contained "
          "in the IANA Language Subtag Registry (RFC 5645), e.g., "
          "\'en-us\' (US English) and \'fr\' (French)." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.20" }, 
       ModelCorrespondence { "CIM_PrintService.NaturalLanguage" }]
   string NaturalLanguage[];

      [Description ( 
          "The supported range of input logical pages per "
          "impression for a PrintJob processed by the associated "
          "PrintService (X:Y), e.g., \'1:9\' or \'1:1\' (one page "
          "per impression). \n"
          "Note: The translation, rotation, and scaling required "
          "for values of \'2\' or more are implementation "
          "dependent." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.9 number-up" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.NumberUp", 
          "CIM_PrintJob.NumberUp" }]
   string NumberUp;

      [Description ( 
          "The supported orientation requested values for any "
          "PrintJob processed by the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'portrait\' means imaged across the short edge, "
          "with no content rotation. \n"
          "Value \'landscape\' means imaged across the long edge, "
          "with content rotated 90 degrees anticlockwise from "
          "\'portrait\'. \n"
          "Value \'reverse-landscape\' means imaged across the long "
          "edge, with content rotated 90 degrees clockwise from "
          "\'portrait\'. \n"
          "Value \'reverse-portrait\' means imaged across the short "
          "edge, with content rotated 180 degrees (opposite) from "
          "\'portrait\'." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.2.10 orientation-requested" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceSettings.OrientationRequested", 
          "CIM_PrintJob.OrientationRequested" }]
   string OrientationRequested[];

      [Description ( 
          "The supported named output bins for any PrintJob "
          "processed by the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Additional vendor or site values may also be used. \n"
          "Standard values defined in PWG 5100.2 include: \n"
          "Value \'top\' means the output bin that, when facing the "
          "device, is best identified as the top bin. \n"
          "Value \'side\' means the output bin that, when facing "
          "the device, is best identified as the side bin." ), 
       MappingStrings { "PWG5100-2.PWG|Section 2.1 output-bin" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.OutputBin" }]
   string OutputBin[];

      [Description ( 
          "The supported output device name(s) for any Print Job "
          "processed by the associated PrintService." ), 
       MappingStrings { 
          "PWG5100-7.PWG|Section 4.2.1.2 output-device-supported" }, 
       ModelCorrespondence { "CIM_Printer.ElementName", 
          "CIM_PrintJob.OutputDevice" }]
   string OutputDevice[];

      [Description ( 
          "The supported pages per minute color for any PrintJob "
          "processed by the associated PrintService. \n"
          "Value of zero indicates that the PrintService takes 2 or "
          "more minutes to process a single page." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.36 pages-per-minute" }]
   uint32 PagesPerMinute;

      [Description ( 
          "The supported color pages per minute for any PrintJob "
          "processed by the associated PrintService. \n"
          "Value of zero indicates that the PrintService takes 2 or "
          "more minutes to process a single color page." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.37 pages-per-minute-color" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceCapabilities.ColorSupported" }]
   uint32 PagesPerMinuteColor;

      [Description ( 
          "Support for input logical page ranges for any PrintJob "
          "processed by the associated PrintService. \n"
          "That is, support for the set of input logical pages to "
          "be included in the output." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.7 page-ranges" }, 
       ModelCorrespondence { "CIM_PrintJob.PageRanges" }]
   boolean PageRanges;

      [Description ( 
          "Specifies whether PDL override is attempted for the "
          "associated PrintService. \n"
          "See section 15.2 of IPP/1.1 (RFC 2911) for details." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.28 pdl-override-supported" }]
   boolean PDLOverrideAttempted;

      [Description ( 
          "The supported print quality values for impressions for "
          "any PrintJob processed by the associated PrintService. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'draft\' means lowest print quality. \n"
          "Value \'normal\' means normal print quality. \n"
          "Value \'high\' means highest print quality." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.13 print-quality" }, 
       ModelCorrespondence { 
          "CIM_PrintServiceSettings.PrintQuality", 
          "CIM_PrintJob.PrintQuality" }]
   string PrintQuality[];

      [Description ( 
          "The supported document reference URI schemes for Jobs "
          "submitted to this instance of PrintService, e.g., \'ftp\' "
          "in an IPP Print-URI operation). \n"
          "Values shall include \'ftp\' if this capabilities "
          "property is implemented by the associated PrintService." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.27" }]
   string ReferenceURISchemes[];

      [Description ( 
          "The supported print resolutions for impressions for any "
          "PrintJob processed by the associated PrintService. \n"
          "That is, the horizontal by vertical resolution in pixels "
          "per inch for output impressions (sides of selected "
          "media) separated by a lowercase \'x\', e.g., print "
          "resolutions of \'300x300\' and \'600x1200\'. \n"
          "Horizontal resolution is defined as resolution in the "
          "cross-feed direction, short-edge in portrait feed mode. \n"
          "Vertical resolution is defined as resolution in the feed "
          "direction, long-edge in portrait feed mode." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.2.12 printer-resolution" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.Resolution", 
          "CIM_PrintJob.HorizontalResolution", 
          "CIM_PrintJob.VerticalResolution" }]
   string Resolution[];

      [Description ( 
          "The supported imposition modes for impressions for any "
          "PrintJob processed by the associated PrintService. \n"
          "That is, the policy for imposing input logical pages "
          "onto output impressions (sides of selected media). \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'one-sided\' means each successive input logical "
          "page onto the same side of consecutive sheets of media. \n"
          "Value \'two-sided-long-edge\' means each consecutive "
          "pair of input logical pages onto front and back sides of "
          "consecutive sheets of media, with orientation for long "
          "edge binding \n"
          "Value \'two-sided-short-edge\' means each consecutive "
          "pair of input logical pages onto front and back sides of "
          "consecutive sheets of media, with orientation for short "
          "edge binding." ), 
       MappingStrings { "RFC2911.IETF|Section 4.2.8 sides" }, 
       ModelCorrespondence { "CIM_PrintServiceSettings.Sides", 
          "CIM_PrintJob.Sides" }]
   string Sides[];


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_PrintServiceCapabilities : CIM_PrintServiceCapabilities
{


};

