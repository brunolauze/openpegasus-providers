//%LICENSE////////////////////////////////////////////////////////////////
//
// Licensed to The Open Group (TOG) under one or more contributor license
// agreements.  Refer to the OpenPegasusNOTICE.txt file distributed with
// this work for additional information regarding copyright ownership.
// Each contributor licenses this file to you under the OpenPegasus Open
// Source License; you may not use this file except in compliance with the
// License.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
//
//%/////////////////////////////////////////////////////////////////////////



// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;

      [Experimental, Description ( 
          "Generation is an optional, monotonically increasing "
          "property that may be used to identify a particular "
          "generation of the resource represented by this class.\n"
          "If Generation is supported by the implementation, its "
          "value shall not be null. \n"
          "Except as otherwise specified, a value (including null) "
          "of Generation specified at creation time shall be "
          "replaced by null if Generation is not supported by the "
          "implementation or shall be a, (possibly different), "
          "non-null value if the implementation does support Generation.\n"
          "After creation and if supported, Generation shall be "
          "updated, at least once per access, whenever the "
          "represented resource is modified, regardless of the "
          "source of the modification.\n"
          "Note: the Generation value only needs to be updated once "
          "between references, even if the resource is updated many "
          "times. The key point is to assure that it will be "
          "different if there have been updates, not to count each update.\n"
          "Note: unless otherwise specified, the value of "
          "Generation within one instance is not required to be "
          "coordinated with the value of Generation in any other instance.\n"
          "Note:the semantics of the instance, (as defined by its "
          "creation class), define the underlying resource. That "
          "underlying resource may be a collection or aggregation "
          "of resources. And, in that case, the semantics of the "
          "instance further define when updates to constituent "
          "resources also require updates to the Generation of the "
          "collective resource. Default behavior of composite "
          "aggregations should be to update the Generation of the "
          "composite whenever the Generation of a component is updated.\n"
          "Subclasses may define additional requirements for "
          "updates on some or all of related instances.\n"
          "For a particular instance, the value of Generation may "
          "wrap through zero, but the elapsed time between wraps "
          "shall be greater than 10\'s of years.\n"
          "This class does not require Generation to be unique "
          "across instances of other classes nor across instances "
          "of the same class that have different keys. Generation "
          "shall be different across power cycles, resets, or "
          "reboots if any of those actions results in an update. "
          "Generation may be different across power cycles, resets, "
          "or reboots if those actions do not result in an update. "
          "If the Generation property of an instance is non-null, "
          "and if any attempt to update the instance includes the "
          "Generation property, then if it doesn\'t match the "
          "current value, the update shall fail.\n"
          "The usage of this property is intended to be further "
          "specified by applicable management profiles. \n"
          "Typically, a client will read the value of this property "
          "and then supply that value as input to an operation that "
          "modifies the instance in some means. This may be via an "
          "explicit parameter in an extrinsic method or via an "
          "embedded value in an extrinsic method or intrinsic operation.\n"
          "For example: a profile may require that an intrinsic "
          "instance modification supply the Generation property and "
          "that it must match for the modification to succeed." )]
   uint64 Generation;


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Version ( "2.39.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A RegisteredSpecification is used to advertise the "
       "implementation of a specification within a WBEM server. The "
       "specification may be authored by the DMTF or another standards "
       "organization. In this context, specification is used to "
       "describe a named and versioned set of constraints. There may "
       "be a one to one correspondence between the set of constraints "
       "and the document in which they are published. An example of a "
       "one to one correspondence is the mechanism used by the DMTF to "
       "publish its profiles. An example of one to many documents to "
       "specifications is an SMI-S book published by SNIA." )]
class CIM_RegisteredSpecification : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID shall be constructed "
          "using the following \'preferred\' algorithm: \n"
          ": \n"
          "Where and are separated by a colon \':\', and where "
          "shall include a copyrighted, trademarked or otherwise "
          "unique name that is owned by the business entity "
          "creating/defining the InstanceID, or is a registered ID "
          "that is assigned to the business entity by a recognized "
          "global authority. (This is similar to the _ structure of "
          "Schema class names.) In addition, to ensure uniqueness, "
          "shall not contain a colon (\':\'). The first colon to "
          "appear in InstanceID shall appear between and . is "
          "chosen by the organizational entity and should not be "
          "re-used to identify different underlying (real-world) "
          "elements. \n"
          "For DMTF defined instances, shall be set to \'CIM\'." )]
   string InstanceID;

      [Description ( "The type of specification." ), 
       ValueMap { "1", "2", "3", "4", ".." }, 
       Values { "Other", "Profile", "Initiative Wrapper", "Mapping", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.OtherSpecificationType" }]
   uint16 SpecificationType;

      [Description ( 
          "OtherSpecificationType shall be a a free-form string "
          "providing a description of the specification type if 1, "
          "\"Other\" is specified for the SpecificationType." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.SpecificationType" }]
   string OtherSpecificationType;

      [Required, Description ( 
          "The organization that defines this specification. \n"
          "\"The Green Grid\" identifies \"The Green Grid "
          "Association\"" ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", ".." }, 
       Values { "Other", "DMTF", "CompTIA", 
          "Consortium for Service Innovation", "FAST", "GGF", 
          "INTAP", "itSMF", "NAC", 
          "Northwest Energy Efficiency Alliance", "SNIA", 
          "TM Forum", "The Open Group", "ANSI", "IEEE", "IETF", 
          "INCITS", "ISO", "W3C", "OGF", "The Green Grid", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.OtherRegisteredOrganization" }]
   uint16 RegisteredOrganization;

      [Description ( 
          "OtherRegisteredOrganization shall be a a free-form "
          "string providing a description of the organization if 1, "
          "\"Other\" is specified for the RegisteredOrganization." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.RegisteredOrganization" }]
   string OtherRegisteredOrganization;

      [Required, Description ( 
          "The name of this registered specification. Since "
          "multiple versions can exist for the same RegisteredName, "
          "the combination of RegisteredName, "
          "RegisteredOrganization, and RegisteredVersion shall "
          "uniquely identify the registered specification within "
          "the scope of the organization. \n"
          "The value of this property shall correspond to the name "
          "given to the set of versioned constraings by a "
          "specification or standard. The value does not identify "
          "the name of the document or publishing media, unless it "
          "happens to be the same as the name given to the "
          "versioned constraints." ), 
       MaxLen ( 256 )]
   string RegisteredName;

      [Required, Description ( 
          "The version describing the creation or last "
          "modificationof the specification. The string "
          "representing the version shall be in the form: \n"
          "M + \".\" + N + \".\" + U \n"
          "Where: \n"
          "M - The major version (in numeric form). \n"
          "N - The minor version (in numeric form). \n"
          "U - The update (e.g. errata, patch, ..., in numeric "
          "form)." )]
   string RegisteredVersion;

      [Required, Description ( 
          "This property identifies the requested network "
          "advertisement for specification information. It is used "
          "by the advertising services of the WBEM infrastructure "
          "to determine what should be advertised, via what "
          "mechanisms. The property is an array so that the "
          "specification may be advertised using several "
          "mechanisms. If an array entry has a value of 2 (Not "
          "Advertised), this shall be the only array entry." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Not Advertised", "SLP", "WS-Identify" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.AdvertiseTypeDescriptions" }]
   uint16 AdvertiseTypes[];

      [Description ( 
          "A free-form string identifying the requested network "
          "advertisement for specification information for cases "
          "where the predefined values in AdvertiseTypes are not "
          "sufficient. Each entry in this array corresponds to the "
          "entry in the AdvertiseTypes array at the same index, and "
          "the two arrays shall have the same number of entries. A "
          "non-Null value shall be provided for each array entry "
          "that corresponds to an AdvertiseTypes entry with a value "
          "of 1 (Other). Other array entries should be Null." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.AdvertiseTypes" }]
   string AdvertiseTypeDescriptions[];


};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Version ( "2.39.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A RegisteredProfile describes a set of CIM Schema classes with "
       "required properties and/or methods, necessary to manage a "
       "real-world entity or to support a usage scenario, in an "
       "interoperable fashion. RegisteredProfiles can be defined by "
       "the DMTF or other standards organizations. Note that this "
       "class should not be confused with CIM_Profile, which collects "
       "SettingData instances, to be applied as a \'configuration "
       "profile\' for an element. \n"
       "A RegisteredProfile is a named \'standard\' for CIM-based "
       "management of a particular System, subsystem, Service or other "
       "entity, for a specified set of uses. It is a complete, "
       "standalone definition, as opposed to the subclass "
       "RegisteredSubProfile, which requires a scoping profile for "
       "context. \n"
       "The uses for a RegisteredProfile or SubProfile MUST be "
       "specified in the document that defines the profile. Examples "
       "of Profiles are to manage various aspects of an Operating "
       "System, Storage Array, or Database. The name of the profile is "
       "defined and scoped by its authoring organization." )]
class CIM_RegisteredProfile : CIM_RegisteredSpecification {

      [Description ( 
          "Profiles may gather a set of provisions together that "
          "are implemented, (or not implemented), as a whole by a "
          "conformant implementation. Such sets are known as "
          "profile features.\n"
          "If a profile does not define features, then this "
          "property shall be null. \n"
          "If not null, an implementation shall put the profile "
          "defined feature name of each implemented feature in a "
          "separate entry of this array." )]
   string ImplementedFeatures[];

      [Override ( "SpecificationType" ), 
       Description ( 
          "If this property has a value other than null, the value shall be 2"
           ), 
       ValueMap { "2" }, 
       Values { "Profile" }, 
       ModelCorrespondence { 
          "CIM_RegisteredSpecification.OtherSpecificationType" }]
   uint16 SpecificationType;


      [Deprecated { "CIM_RegisteredProfile.GetCentralInstances" }, 
       Description ( 
          "This operation is used to close a session to enumerate "
          "central and scoping class instances." ), 
       VALUEMAP { "0", "1", ".." }, 
       VALUES { "Completed with No Error", "Not Supported", 
          "DMTF Reserved" }]
   uint32 CloseConformantInstances(
         [Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used." )]
      string EnumerationContext);

      [Deprecated { "CIM_RegisteredProfile.GetCentralInstances" }, 
       Description ( 
          "This operation is used to establish and open a session "
          "to enumerate central and scoping class instances of this "
          "registered profile instance and optionally to retrieve a "
          "first set of such instances." ), 
       VALUEMAP { "0", "1", "22", "26", ".." }, 
       VALUES { "Completed with No Error", "Not Supported", 
          "CIM_ERR_INVALID_OPERATION_TIMEOUT", 
          "CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED", 
          "DMTF Reserved" }]
   uint32 OpenConformantInstances(
         [Description ( 
             "NULL, or a class name that acts as a filter to "
             "select only those central or scoping instances "
             "that a kind of the specified class. This is useful "
             "to select particular subclasses or to select a "
             "particular instances when more than one is defined "
             "for a profile." )]
      string ResultClass, 
         [Description ( 
             "NULL, or unordered set of property names, acting "
             "as a restricting filter on the properties included "
             "in the returned instance. An empty list specifies "
             "to return no properties. The instance path shall "
             "always be returned." )]
      string IncludedPropertyList[], 
         [Description ( 
             "The operation timeout is the minimum time the CIM "
             "Server shall maintain the open enumeration session "
             "after the last OpenConformantInstances or "
             "PullConformantInstances invocation, (unless the "
             "enumeration session was closed during that last "
             "invocation). If the operation timeout is exceeded, "
             "the enumeration session may be closed at any time, "
             "releasing any possibly allocated resources related "
             "to the enumeration session. \n"
             "An OperationTimeout of 0 means that there is no "
             "operation timeout, i.e. the enumeration session is "
             "never closed based on time.\n"
             "If OperationTimeout is NULL, the operation timeout "
             "is implementation dependent. \n"
             "All other values for OperationTimeout specify the "
             "operation timeout in seconds.\n"
             "The implementation may restrict the set of "
             "allowable values for OperationTimeout. This "
             "specifically includes the possibility to not allow "
             "0 (no timeout).\n"
             "If the specified value is not an allowable value, "
             "the method shall return failure with return code "
             "CIM_ERR_INVALID_OPERATION_TIMEOUT." )]
      uint32 OperationTimeout, 
         [Description ( 
             "TRUE requests continuation on error. Continuation "
             "on error is the ability to resume an enumeration "
             "session successfully after an invocation of this "
             "method that returned an error. A conformant "
             "implementation may support continuation on error.\n"
             "If ContinueOnError is true and the method does not "
             "support continuation on error, it shall return "
             "failure with return code "
             "CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED \n"
             "If the implementation supports continuation on "
             "error, it shall support it as follows: If "
             "ContinueOnErroris true, the enumeration session "
             "shall remain open when this or a subsequent "
             "PullConformantInstances invocation returns "
             "failure, and any subsequent successful "
             "PullConformantInstances operations process the set "
             "of instances that would have remained if the "
             "failing invocation had been successful, subject to "
             "the consistency rules defined for pulled "
             "enumerations, see DSP0223.\n"
             "If ContinueOnError is false, the enumeration "
             "session shall be closed when this method returns "
             "failure." )]
      boolean ContinueOnError, 
         [Description ( 
             "The MaxObjectCount input parameter defines the "
             "maximum number of elements that may be returned by "
             "this Pull operation. Any uint32 number is valid, "
             "including 0. The implementation may deliver any "
             "number of elements up to MaxObjectCount but shall "
             "not deliver more than MaxObjectCount.elements. The "
             "CIM Client may use a MaxObjectCount value of 0 as "
             "a means of restarting the OperationTimeout for the "
             "enumeration session, while it wishes to not "
             "retrieve any elements." )]
      uint32 MaxObjectCount, 
         [IN ( false ), OUT, Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used.\n"
             "If the session is closed as a result of this "
             "invocation, the output EnumerationContext shall be "
             "NULL. Otherwise, the output EnumerationContext "
             "shall provide the information necessary for a "
             "subsequent PullConformantInstances call." )]
      string EnumerationContext, 
         [IN ( false ), OUT, Description ( 
             "The EndOfSequence output parameter indicates to "
             "the CIM Client whether the enumeration session is "
             "exhausted. If EndOfSequence is true upon "
             "successful completion of this invocation, no more "
             "elements are available and the implmeentation "
             "shall close the enumeration session, releasing any "
             "possibly allocated resources related to the "
             "enumeration session. If EndOfSequence is false, "
             "there may be additional elements available and "
             "implementation shall not close the enumeration "
             "session." )]
      boolean EndOfSequence, 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an array corresponding "
             "to the InstanceWithPathList that indicates whether "
             "the entry is a scoping instance, a central "
             "instance, or both." ), 
          ValueMap { "2", "3", "4", ".." }, 
          Values { "Central Instance", "Scoping Instance", 
             "Central and Scoping Instance", "DMTF Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_RegisteredProfile.OpenConformantInstances(InstanceWithPathList)" }]
      uint16 InstanceType[], 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an correlated, but "
             "unordered set of the enumerated instances and "
             "their addresses, with a number of entries from 0, "
             "up to a maximum defined by MaxObjectCount, that "
             "meet the criteria defined in the Open operation "
             "that established this enumeration session. Note "
             "that returning no entries in the array does not "
             "imply that the enumeration session has been "
             "exhausted. Only the EndOfSequence output parameter "
             "indicates whether the enumeration session has been "
             "exhausted." ), 
          EmbeddedInstance ( "CIM_ManagedElement" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_RegisteredProfile.OpenConformantInstances(InstanceType)" }]
      string InstanceWithPathList[]);

      [Deprecated { "CIM_RegisteredProfile.GetCentralInstances" }, 
       Description ( 
          "This operation is used to continue enumeration central "
          "class instances in the context of a session established "
          "by OpenConformantInstances." ), 
       VALUEMAP { "0", "1", "21", ".." }, 
       VALUES { "Completed with No Error", "Not Supported", 
          "CIM_ERR_INVALID_ENUMERATION_CONTEXT", "DMTF Reserved" }]
   uint32 PullConformantInstances(
         [Description ( 
             "The MaxObjectCount input parameter defines the "
             "maximum number of elements that may be returned by "
             "this method. Any uint32 number is valid, including "
             "0. The implementation may deliver any number of "
             "elements up to MaxObjectCount but shall not "
             "deliver more than MaxObjectCount elements. The CIM "
             "Client may use a MaxObjectCount value of 0 as a "
             "means of restarting the OperationTimeout for the "
             "enumeration session, while it wishes to not "
             "retrieve any elements." )]
      uint32 MaxObjectCount, 
         [OUT, Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used.\n"
             "On input, it shall be the EnumerationContext ouput "
             "value from the previous invocation of "
             "OpenConformantInstances or PullConformantInstances "
             "within an open enumeration session.If the session "
             "is closed as a result of this invocation, the "
             "output EnumerationContext shall be NULL. "
             "Otherwise, the output EnumerationContext shall "
             "provide the information necessary for a subsequent "
             "PullConformantInstances call." )]
      string EnumerationContext, 
         [IN ( false ), OUT, Description ( 
             "The EndOfSequence output parameter indicates to "
             "the CIM Client whether the enumeration session is "
             "exhausted. If EndOfSequence is true upon "
             "successful completion of this method, no more "
             "elements are available and the enumeration session "
             "shall be closed, releasing any possibly allocated "
             "resources related to the enumeration session. If "
             "EndOfSequence is false, there may be additional "
             "elements available and enumeration session shall "
             "be remain open unless there is an error in which "
             "case, ContinueOnError governs whether or not the "
             "session is closed or not." )]
      boolean EndOfSequence, 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an array corresponding "
             "to the InstanceWithPathList that indicates whether "
             "the entry is a scoping instance, a central "
             "instance, or both." ), 
          ValueMap { "2", "3", "4", ".." }, 
          Values { "Central Instance", "Scoping Instance", 
             "Central and Scoping Instance", "DMTF Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_RegisteredProfile.PullConformantInstances(InstanceWithPathList)" }]
      uint16 InstanceType[], 
         [IN ( false ), OUT, Description ( 
             "On successful completion, a correlated, but "
             "unordered set of the enumerated instances and "
             "their addresses, with a number of entries from 0, "
             "up to a maximum defined by MaxObjectCount, that "
             "meet the criteria defined in the "
             "OpenConformantInstances operation that established "
             "this enumeration session. Note that returning no "
             "entries in the array does not imply that the "
             "enumeration session has been exhausted. Only the "
             "EndOfSequence output parameter indicates whether "
             "the enumeration session has been exhausted." ), 
          EmbeddedInstance ( "CIM_ManagedElement" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_RegisteredProfile.PullConformantInstances(InstanceType)" }]
      string InstanceWithPathList[]);

      [Description ( 
          "GetCentralInstances will get all the references of the "
          "central instances for the profile represented by this "
          "instance. If this method completes without an error, it "
          "shall return 0, otherwise it shall return an error with "
          "zero or more CIM_Error instances." ), 
       ValueMap { "0" }, 
       Values { "Completed with no error" }]
   uint8 GetCentralInstances(
         [In ( false ), Out, Description ( 
             "The CentralInstances output parameter will include "
             "zero or more references to central instances for "
             "the profile." )]
      CIM_ManagedElement REF CentralInstances[]);

};



// Copyright (c) 2013 DMTF.  All rights reserved.
   [Deprecated { "CIM_RegisteredProfile" }, 
    Version ( "2.37.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A RegisteredSubProfile subclasses RegisteredProfile to "
       "indicate that a scoping profile is required to provide "
       "context. The latter is specified by the mandatory association, "
       "SubProfileRequiresProfile." )]
class CIM_RegisteredSubProfile : CIM_RegisteredProfile {


};



   [Version( "2.40.0" ), Description("{0}")]
class UNIX_RegisteredSubProfile : CIM_RegisteredSubProfile
{


};

